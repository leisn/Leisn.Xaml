<!--This file is auto-generated, any changes of this file will lost after regenerated.-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" xmlns:converters="clr-namespace:Leisn.Xaml.Wpf.Converters" xmlns:local="clr-namespace:Leisn.Xaml.Wpf.Controls" xmlns:internals="clr-namespace:Leisn.Xaml.Wpf.Internals" xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:skia="clr-namespace:SkiaSharp.Views.WPF;assembly=SkiaSharp.Views.WPF" xmlns:lang="clr-namespace:Leisn.Xaml.Wpf.Locales" xmlns:editor="clr-namespace:Leisn.Xaml.Wpf.Controls.Editors">
  <Color x:Key="BorderColor">#987987</Color>
  <Color x:Key="BorderLightColor">#A0A0A0</Color>
  <Color x:Key="BorderDarkColor">#404040</Color>
  <Color x:Key="TextColor">#E0E0E0</Color>
  <Color x:Key="TextLightColor">#F0F0F0</Color>
  <Color x:Key="TextDarkColor">#B3B4B5</Color>
  <Color x:Key="TextInverseColor">#FF212121</Color>
  <Color x:Key="PrimaryColor">#326CF3</Color>
  <Color x:Key="PrimaryLightColor">#4575E5</Color>
  <Color x:Key="PrimaryDarkColor">#1060FD</Color>
  <Color x:Key="PrimaryTextColor">#FFE0E0E0</Color>
  <Color x:Key="AccentColor">#f8491e</Color>
  <Color x:Key="AccentTextColor">#FFE0E0E0</Color>
  <Color x:Key="InfoColor">#00bcd4</Color>
  <Color x:Key="InfoTextColor">#FFE0E0E0</Color>
  <Color x:Key="SuccessColor">#2db84d</Color>
  <Color x:Key="SuccessTextColor">#FFE0E0E0</Color>
  <Color x:Key="WarningColor">#2db84d</Color>
  <Color x:Key="WarningTextColor">#FFE0E0E0</Color>
  <Color x:Key="DangerColor">#db3340</Color>
  <Color x:Key="DangerTextColor">#FFE0E0E0</Color>
  <Color x:Key="HighlightColor">#EFEFEF</Color>
  <Color x:Key="HighlightTextColor">#FF212121</Color>
  <Color x:Key="RegionColor">#303030</Color>
  <Color x:Key="RegionLight1Color">#363636</Color>
  <Color x:Key="RegionLight2Color">#3d3d3d</Color>
  <Color x:Key="RegionDark1Color">#282828</Color>
  <Color x:Key="RegionDark2Color">#222222</Color>
  <Color x:Key="ControlColor">#545454</Color>
  <Color x:Key="ControlTextColor">#FFE0E0E0</Color>
  <Color x:Key="ControlLight1Color">#656565</Color>
  <Color x:Key="ControlLight2Color">#797979</Color>
  <Color x:Key="ControlDark1Color">#444444</Color>
  <Color x:Key="ControlDark2Color">#212121</Color>
  <FontFamily x:Key="SymbolFontFamily">Segoe MDL2 Assets</FontFamily>
  <FontFamily x:Key="FluentIconFontFamily">Segoe Fluent Icons</FontFamily>
  <sys:Double x:Key="DefaultFontSize">12</sys:Double>
  <sys:Double x:Key="FontSize80">9</sys:Double>
  <sys:Double x:Key="FontSize50">6</sys:Double>
  <sys:Double x:Key="FontSize120">14</sys:Double>
  <sys:Double x:Key="FontSize140">16</sys:Double>
  <sys:Double x:Key="FontSize160">20</sys:Double>
  <sys:Double x:Key="FontSize180">22</sys:Double>
  <sys:Double x:Key="FontSize200">24</sys:Double>
  <sys:Double x:Key="FontSize250">30</sys:Double>
  <sys:Double x:Key="FontSize300">36</sys:Double>
  <sys:Double x:Key="FontSize400">48</sys:Double>
  <sys:Double x:Key="FontSize500">60</sys:Double>
  <sys:Double x:Key="DefaultRadius">3</sys:Double>
  <CornerRadius x:Key="DefaultCornerRadius">3</CornerRadius>
  <CornerRadius x:Key="DefaultLeftCornerRadius">3,0,0,3</CornerRadius>
  <CornerRadius x:Key="DefaultTopCornerRadius">3,3,0,0</CornerRadius>
  <CornerRadius x:Key="DefaultBottomCornerRadius">0,0,3,3</CornerRadius>
  <CornerRadius x:Key="DefaultRightCornerRadius">0,3,3,0</CornerRadius>
  <sys:Double x:Key="SmallRadius">2</sys:Double>
  <CornerRadius x:Key="SmallCornerRadius">2</CornerRadius>
  <CornerRadius x:Key="SmallLeftCornerRadius">2,0,0,2</CornerRadius>
  <CornerRadius x:Key="SmallTopCornerRadius">2,2,0,0</CornerRadius>
  <CornerRadius x:Key="SmallBottomCornerRadius">0,0,2,2</CornerRadius>
  <CornerRadius x:Key="SmallRightCornerRadius">0,2,2,0</CornerRadius>
  <sys:Double x:Key="LargeRadius">8</sys:Double>
  <CornerRadius x:Key="LargeCornerRadius">8</CornerRadius>
  <CornerRadius x:Key="LargeLeftCornerRadius">8,0,0,8</CornerRadius>
  <CornerRadius x:Key="LargeTopCornerRadius">8,8,0,0</CornerRadius>
  <CornerRadius x:Key="LargeBottomCornerRadius">0,0,8,8</CornerRadius>
  <CornerRadius x:Key="LargeRightCornerRadius">0,8,8,0</CornerRadius>
  <sys:Double x:Key="InputMinHeight">24</sys:Double>
  <sys:Double x:Key="ScrollBarMinWidth">6</sys:Double>
  <sys:Double x:Key="ScrollBarWidth">8</sys:Double>
  <sys:Double x:Key="ExpenderArrowWidth">7</sys:Double>
  <Thickness x:Key="ComboBoxItemPadding">5,1</Thickness>
  <sys:Double x:Key="DateTimeSelectorPopupMaxHeight">398</sys:Double>
  <PathGeometry x:Key="SpannerGeometry" o:Freeze="True" Figures="M1024.999766 343.865677c0 190.125732-155.339321 344.665365-345.465053 343.865678-24.290512-0.099961-47.981257-2.698946-70.772355-7.597032-21.091761-4.498243-43.083171 2.09918-58.377196 17.393205L270.094651 977.81804c-30.787973 30.787973-71.37212 46.18196-111.956268 46.18196s-81.168294-15.393987-111.956267-46.18196-46.18196-71.37212-46.18196-111.956267c0-40.584147 15.393987-81.168294 46.18196-111.956267l280.990239-280.990239c15.194065-15.194065 21.791488-37.085513 17.393205-58.077313-4.798126-22.791097-7.29715-46.481843-7.297149-70.672394C337.068489 154.539633 491.508161 0 681.134088 0c24.790316 0 48.980867 2.598985 72.37173 7.597032 6.197579 1.299492 12.395158 2.798907 18.492776 4.498243 23.590785 6.497462 31.387739 36.085904 14.094495 53.47911l-13.59469 13.59469-159.237798 159.137836c-22.991019 22.991019-35.68606 53.778993-35.68606 86.766107 0 32.887153 12.695041 63.675127 35.68606 86.666146 22.991019 22.991019 53.778993 35.68606 86.666146 35.686061 32.887153 0 63.675127-12.695041 86.766107-35.686061L959.425381 238.906677c17.293245-17.293245 46.981648-9.596251 53.479109 14.094494 1.699336 6.097618 3.19875 12.295197 4.498243 18.492777 4.998048 23.390863 7.597032 47.581414 7.597033 72.371729z" />
  <PathGeometry x:Key="RunGeometry" o:Freeze="True" Figures="M510.545882 63.815421c-246.710938 0-446.708971 199.999057-446.708971 446.708971S263.834944 957.234387 510.545882 957.234387 957.255877 757.23533 957.255877 510.525416 757.25682 63.815421 510.545882 63.815421zM754.661715 441.875896 400.205844 796.310278c-4.02364 4.02364-9.382695 6.109138-14.762215 6.109138-3.856841 0-7.756661-1.063215-11.197016-3.231601-8.257058-5.254677-11.738345-15.533788-8.402367-24.707728l73.226768-201.330378L281.192264 573.149708c-8.423857 0-16.034185-5.087878-19.265786-12.885472-3.231601-7.797593-1.438769-16.805758 4.52506-22.768563L579.205635 224.740554c6.547113-6.589069 16.638959-7.985882 24.77015-3.523243 8.132214 4.461615 12.322653 13.761422 10.321066 22.810518l-36.050054 162.319899 161.652703 0c8.423857 0 16.054651 5.045923 19.265786 12.82305C762.396887 426.968371 760.604054 435.913091 754.661715 441.875896z" />
  <PathGeometry x:Key="SettingsGeometry" o:Freeze="True" Figures="M967.882752 603.308032c26.207232-104.832-2.62144-173.251584-2.62144-173.251584l-100.272128-4.922368c-8.786944-31.470592-21.655552-61.147136-38.00576-88.600576l67.64544-76.797952c-55.595008-92.654592-124.363776-120.651776-124.363776-120.651776l-74.48064 67.513344c-27.746304-16.140288-57.759744-28.643328-89.506816-37.108736l-6.390784-100.893696c-104.827904-26.211328-173.251584 2.625536-173.251584 2.625536l-4.7616 96.979968c-31.289344 7.86432-61.060096 19.470336-88.580096 34.787328l-70.501376-63.904768c0 0-68.768768 27.997184-124.363776 120.651776 17.671168 20.058112 52.43904 43.088896 54.524928 72.580096 0.514048 7.28064-33.462272 93.239296-34.927616 93.313024l-90.230784 4.427776c0 0-28.828672 68.41856-2.625536 173.251584l89.423872 5.666816c8.444928 35.557376 21.997568 69.04832 39.94112 99.762176l-58.875904 64.949248c0 0 27.997184 68.768768 120.651776 124.363776l67.101696-59.101184c30.400512 18.198528 63.587328 32.063488 98.861056 40.890368l4.36224 88.844288c0 0 68.422656 28.832768 173.251584 2.625536l5.876736-92.72832c35.72224-9.469952 69.250048-24.103936 99.827712-43.199488l71.151616 62.669824c92.658688-55.590912 120.655872-124.363776 120.655872-124.363776l-64.81408-71.501824c15.968256-28.69248 27.952128-59.809792 35.791872-92.572672L967.882752 603.308032zM516.528128 735.343616c-118.956032 0-215.389184-96.433152-215.389184-215.39328 0-118.956032 96.433152-215.389184 215.389184-215.389184s215.39328 96.433152 215.39328 215.389184C731.921408 638.911488 635.48416 735.343616 516.528128 735.343616z" />
  <PathGeometry x:Key="ExperimentGeometry" o:Freeze="True" Figures="M416 213.333333a96 96 0 0 1 192 0v357.290667l12.8 9.6a181.333333 181.333333 0 1 1-217.6 0l12.8-9.6V213.333333zM512 53.333333A160 160 0 0 0 352 213.333333v326.016a245.333333 245.333333 0 1 0 320 0V213.333333A160 160 0 0 0 512 53.333333zM469.333333 213.333333a42.666667 42.666667 0 1 1 85.333334 0v391.253334a128.042667 128.042667 0 1 1-85.333334 0V213.333333z" />
  <PathGeometry x:Key="LogGeometry" o:Freeze="True" Figures="M410.3 187.1h209.4c18.5 0 33.4-14.4 33.4-32.1v-53.9c0-17.7-15-32.1-33.4-32.1H410.3c-18.5 0-33.4 14.4-33.4 32.1V155c0 17.7 15 32.1 33.4 32.1zM787.7 132.8H680.8v35.8c0 22-18.5 39.8-41.4 39.8H390.7c-22.9 0-41.4-17.8-41.4-39.8v-35.8H242.4c-58.7 0-106.2 45.7-106.2 102v610.6c0 56.3 47.6 102 106.2 102h545.2c58.7 0 106.2-45.7 106.2-102V234.8c0.1-56.3-47.5-102-106.1-102z m-27.5 592.3H291.4c-14.8 0-26.8-11.5-26.8-25.7s12-25.7 26.8-25.7h468.9c14.8 0 26.8 11.5 26.8 25.7s-12.1 25.7-26.9 25.7z m0-168.6H291.4c-14.8 0-26.8-11.5-26.8-25.7s12-25.7 26.8-25.7h468.9c14.8 0 26.8 11.5 26.8 25.7s-12.1 25.7-26.9 25.7z m0-168.6H291.4c-14.8 0-26.8-11.5-26.8-25.7s12-25.7 26.8-25.7h468.9c14.8 0 26.8 11.5 26.8 25.7s-12.1 25.7-26.9 25.7z" />
  <PathGeometry x:Key="HelperGeometry" o:Freeze="True" Figures="M509.44 954.88c-250.88 0-455.68-204.8-455.68-455.68s204.8-455.68 455.68-455.68 455.68 204.8 455.68 455.68-204.8 455.68-455.68 455.68z m-51.2-153.6h99.84v-99.84h-99.84v99.84z m74.24-604.16c-115.2 0-225.28 56.32-225.28 202.24h99.84c0-48.64 30.72-102.4 99.84-102.4 40.96 0 99.84 15.36 99.84 76.8 0 56.32-17.92 66.56-71.68 107.52-53.76 35.84-79.36 81.92-76.8 140.8v30.72h102.4c0-92.16 64-102.4 115.2-176.64 25.6-38.4 35.84-74.24 35.84-120.32 0-79.36-71.68-158.72-179.2-158.72z" />
  <PathGeometry x:Key="ShutdownGeometry" o:Freeze="True" Figures="M473.946312 173.781952c0-29.457916 24.090675-53.597709 53.54859-53.597709 29.458939 0 53.597709 24.139793 53.597709 53.597709l0 294.681486c0 29.457916-24.13877 53.597709-53.597709 53.597709-29.457916 0-53.54859-24.139793-53.54859-53.597709L473.946312 173.781952 473.946312 173.781952zM527.494902 870.388437c-192.31812 0-348.278171-155.964144-348.278171-348.279195 0-144.880715 88.524173-269.019013 214.387765-321.529971l0 121.033587c-64.681138 43.25106-107.195418 116.850311-107.195418 200.496383 0 133.151579 107.932198 241.131873 241.135966 241.131873 133.251863 0 241.185085-107.928105 241.185085-241.131873 0-83.59593-42.612517-157.193135-107.293655-200.496383L661.436474 200.530153c125.960807 52.511981 214.388788 176.650279 214.388788 321.530994C875.824239 714.424292 719.863165 870.388437 527.494902 870.388437L527.494902 870.388437z" />
  <PathGeometry x:Key="UserGeometry" o:Freeze="True" Figures="M576 706.612l0-52.78c70.498-39.728 128-138.772 128-237.832 0-159.058 0-288-192-288s-192 128.942-192 288c0 99.06 57.502 198.104 128 237.832l0 52.78c-217.102 17.748-384 124.42-384 253.388l896 0c0-128.968-166.898-235.64-384-253.388z" />
  <PathGeometry x:Key="ConnectedGeometry" o:Freeze="True" Figures="M922.243 97.755c11.49 11.489 11.673 30.002 0.547 41.713l-0.547 0.562-109.119 109.1c57.22 78.348 42.673 195.388-35.778 273.839l-92.83 92.585c-11.572 11.54-30.264 11.653-41.97 0.253l-45.746-44.55-18.089 18.086a29.891 29.891 0 0 1-7.171 5.3l48.764 47.489c11.947 11.638 12.06 30.804 0.248 42.585l-95.875 95.629c-77.416 77.417-192.412 92.603-270.72 38.004L144.04 928.245c-11.676 11.673-30.606 11.673-42.282 0-11.49-11.489-11.673-30.002-0.547-41.713l0.547-0.562 109.677-109.657c-55.981-78.335-41.131-194.413 36.833-272.377l92.831-92.585c11.571-11.54 30.263-11.653 41.969-0.254l42.587 41.474a29.935 29.935 0 0 1 3.678-4.741l0.548-0.562 19.54-19.538-44.11-42.957c-11.828-11.522-12.057-30.422-0.6-42.23l0.351-0.355 95.875-95.63c76.927-76.926 190.96-92.408 269.23-39.03L879.961 97.755c11.676-11.673 30.606-11.673 42.282 0zM362.451 474.49l-71.916 71.727-1.884 1.911c-61.822 63.545-67.916 156.289-16.185 208.02C324.72 808.4 418.82 801.655 482.43 738.044l74.422-74.234-194.401-189.32z m129.807-5.04l-20.096 20.094a30.035 30.035 0 0 1-4.643 3.8l63.25 61.595a29.82 29.82 0 0 1 5.113-7.308l0.547-0.561 17.532-17.531-61.703-60.089z m260.889-198.691c-52.254-52.254-146.353-45.509-209.964 18.102l-74.422 74.234 194.4 189.322 71.939-71.75 1.862-1.888c61.822-63.545 67.916-156.29 16.185-208.02z" />
  <PathGeometry x:Key="DisconnectedGeometry" o:Freeze="True" Figures="M633.192 681.593l54.362-54.362 200.512 200.513-54.362 54.361zM180.185 228.577l54.362-54.362 307.539 307.54-54.362 54.361z M351.81 1017.86c-88.6 0-177.2-33.71-244.64-101.18C41.81 851.36 5.83 764.45 5.83 672.06c0-92.43 35.98-179.34 101.34-244.66l326.2-326.2c134.89-134.93 354.4-134.93 489.28 0C988.02 166.52 1024 253.43 1024 345.82c0 92.43-35.98 179.34-101.34 244.66l-326.2 326.2c-67.45 67.46-156.05 101.18-244.65 101.18z" FillRule="EvenOdd" />
  <PathGeometry x:Key="DeleteGeometry" o:Freeze="True" Figures="M840 288H688v-56c0-40-32-72-72-72h-208C368 160 336 192 336 232V288h-152c-12.8 0-24 11.2-24 24s11.2 24 24 24h656c12.8 0 24-11.2 24-24s-11.2-24-24-24zM384 288v-56c0-12.8 11.2-24 24-24h208c12.8 0 24 11.2 24 24V288H384zM758.4 384c-12.8 0-24 11.2-24 24v363.2c0 24-19.2 44.8-44.8 44.8H332.8c-24 0-44.8-19.2-44.8-44.8V408c0-12.8-11.2-24-24-24s-24 11.2-24 24v363.2c0 51.2 41.6 92.8 92.8 92.8h358.4c51.2 0 92.8-41.6 92.8-92.8V408c-1.6-12.8-12.8-24-25.6-24zM444.8 744v-336c0-12.8-11.2-24-24-24s-24 11.2-24 24v336c0 12.8 11.2 24 24 24s24-11.2 24-24zM627.2 744v-336c0-12.8-11.2-24-24-24s-24 11.2-24 24v336c0 12.8 11.2 24 24 24s24-11.2 24-24z" />
  <PathGeometry x:Key="ImportGeometry" o:Freeze="True" Figures="M 2.4,4.7 4.5,6.6 V 0.4 C 4.5,0.2 4.7,0 5.1,0 5.3,0 5.5,0.2 5.5,0.4 V 6.6 L 7.6,4.7 C 7.6,4.7 7.8,4.7 7.8,4.7 8,4.7 8.2,4.7 8.2,4.9 8.4,5.1 8.4,5.3 8.2,5.4 L 5.3,7.9 C 5.3,7.9 5.3,7.9 5.3,7.9 5.3,7.9 5.3,7.9 5.3,7.9 5.3,7.9 5.3,7.9 5.3,7.9 5.3,7.9 5.3,7.9 5.3,7.9 5.3,7.9 5.3,7.9 5.3,7.9 5.3,7.9 5.3,7.9 5.1,7.9 V 7.9 C 5.1,7.9 5.1,7.9 5.1,7.9 V 7.9 C 5.1,7.9 5.1,7.9 5.1,7.9 V 7.9 C 5.1,7.9 5.1,7.9 5.1,7.9 V 7.9 C 5.1,7.9 5.1,7.9 5.1,7.9 H 4.9 C 4.9,7.9 4.9,7.9 4.9,7.9 4.9,7.9 4.9,7.9 4.9,7.9 V 7.9 7.9 C 4.9,7.9 4.9,7.9 4.9,7.9 4.9,7.9 4.9,7.9 4.9,7.9 4.9,7.9 4.9,7.9 4.9,7.9 4.9,7.9 4.9,7.9 4.9,7.9 4.9,7.9 4.9,7.9 4.7,7.9 4.7,7.9 4.7,7.9 4.7,7.9 L 1.8,5.4 C 1.6,5.3 1.6,5.1 1.8,4.9 2,4.7 2.2,4.7 2.4,4.7 Z M 9.6,6 C 9.5,6 9.3,6.2 9.3,6.4 V 9.2 H 0.7 V 6.4 C 0.7,6.2 0.5,6 0.4,6 0.2,6 0,6.2 0,6.4 V 9.6 C 0,9.8 0.2,10 0.4,10 H 9.6 C 9.8,10 10,9.8 10,9.6 V 6.4 C 10,6.2 9.8,6 9.6,6 Z" />
  <PathGeometry x:Key="ExportGeometry" o:Freeze="True" Figures="M 2.4,3.1 4.5,1.3 V 7.6 C 4.5,7.8 4.7,8 5.1,8 5.3,8 5.5,7.8 5.5,7.6 V 1.3 L 7.6,3.1 C 7.6,3.3 7.8,3.3 7.8,3.3 8,3.3 8.2,3.1 8.2,3.1 8.4,3 8.4,2.8 8.2,2.6 L 5.3,0.2 C 5.3,0.2 5.3,0.2 5.3,0.2 5.3,0.2 5.3,0.2 5.3,0.2 5.3,0.2 5.3,0.2 5.3,0.2 5.3,0.2 5.3,0.2 5.3,0.2 5.3,0.2 5.3,0.2 5.3,0.2 5.3,0.2 5.3,0 5.1,0 V 0 C 5.1,0 5.1,0 5.1,0 V 0 C 5.1,0 5.1,0 5.1,0 V 0 C 5.1,0 5.1,0 5.1,0 V 0 C 5.1,0 5.1,0 5.1,0 H 4.9 C 4.9,0 4.9,0 4.9,0 4.9,0 4.9,0 4.9,0 V 0 0 C 4.9,0 4.9,0 4.9,0 4.9,0 4.9,0 4.9,0 4.9,0 4.9,0 4.9,0 4.9,0 4.9,0 4.9,0 4.9,0.2 4.9,0.2 4.7,0.2 4.7,0.2 4.7,0.2 4.7,0.2 L 1.8,2.6 C 1.6,2.8 1.6,3 1.8,3.1 2,3.3 2.2,3.3 2.4,3.1 Z M 9.6,5.9 C 9.5,5.9 9.3,6.1 9.3,6.5 V 9.1 H 0.7 V 6.5 C 0.7,6.1 0.5,5.9 0.4,5.9 0.2,5.9 0,6.1 0,6.5 V 9.4 C 0,9.8 0.2,10 0.4,10 H 9.6 C 9.8,10 10,9.8 10,9.4 V 6.5 C 10,6.1 9.8,5.9 9.6,5.9 Z" />
  <PathGeometry x:Key="FileGeometry" o:Freeze="True" Figures="M854.6 288.7c6 6 9.4 14.1 9.4 22.6V928c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h424.7c8.5 0 16.7 3.4 22.7 9.4l215.2 215.3zM790.2 326L602 137.8V326h188.2z" />
  <PathGeometry x:Key="EditGeometry" o:Freeze="True" Figures="M686.4 224c-6.4-6.4-6.4-16 0-22.4l68-68c6.4-6.4 16-6.4 22.4 0l112.8 112.8c6.4 6.4 6.4 16 0 22.4l-68 68c-6.4 6.4-16 6.4-22.4 0L686.4 224zM384 776l372-372c5.6-5.6 4.8-15.2-1.6-20.8L641.6 269.6c-6.4-6.4-16-7.2-20.8-1.6L248 640l-56 192 192-56zM64 896v64h896v-64H64z" />
  <PathGeometry x:Key="ReturnGeometry" o:Freeze="True" Figures="M475 276V141.4c-12.1-56.3-58.2-22-58.2-22L96.6 395.9c-70.4 48.9-4.8 85.7-4.8 85.7l315.4 274.1c63.1 46.5 67.9-24.5 67.9-24.5V606.4C795.3 506 926.3 907.5 926.3 907.5c12.1 22 19.4 0 19.4 0C1069.4 305.4 475 276 475 276z" />
  <PathGeometry x:Key="CameraGeometry" o:Freeze="True" Figures="M506.51559 405.190369c-73.123414 0-132.432195 58.953693-132.432195 131.673925s59.308781 131.675972 132.432195 131.675972c73.14695 0 132.455731-58.95574 132.455731-131.675972S579.663564 405.190369 506.51559 405.190369zM934.574806 299.197336c0-25.916253-21.170159-46.944172-47.254234-46.944172L721.921545 252.253164l-23.638373-46.993291c0 0-21.147646-46.992267-47.231721-46.992267L367.48614 158.267607c-26.083052 0-47.229674 46.992267-47.229674 46.992267l-23.638373 46.993291L131.217019 252.253164c-26.082028 0-47.25321 21.027919-47.25321 46.944172l0 516.868891c0 25.963325 21.171182 46.993291 47.25321 46.993291l756.103554 0c26.083052 0 47.254234-21.029966 47.254234-46.993291l0-65.789379-0.403183 10.016121 0.403183-170.120562L934.574806 299.197336zM506.51559 712.443172c-97.496521 0-176.554088-78.651314-176.554088-175.578878 0-96.973612 79.057567-175.579901 176.554088-175.579901 97.522104 0 176.576601 78.606289 176.576601 175.579901C683.092191 633.791857 604.037694 712.443172 506.51559 712.443172zM786.096147 397.739676c-20.148899 0-36.455283-16.32992-36.455283-36.455283 0-20.125363 16.306384-36.455283 36.455283-36.455283 20.126386 0 36.455283 16.32992 36.455283 36.455283C822.55143 381.409756 806.222533 397.739676 786.096147 397.739676z" />
  <PathGeometry x:Key="LeftGeometry" o:Freeze="True" Figures="M394.24 512L683.52 248.32c10.24-10.24 10.24-25.6 0-35.84-10.24-10.24-25.6-10.24-35.84 0l-307.2 279.04c-5.12 5.12-7.68 12.8-7.68 20.48 0 7.68 2.56 15.36 7.68 20.48l307.2 279.04c10.24 10.24 25.6 10.24 35.84 0 10.24-10.24 10.24-25.6 0-35.84L394.24 512z" />
  <PathGeometry x:Key="RightGeometry" o:Freeze="True" Figures="M4.1666641,0 C5.2083321,0 6.25,0.41666794 7.0833321,1.25 L57.083331,46.666664 C57.916664,47.499998 58.33333,48.749998 58.333329,49.999998 58.33333,51.249997 57.916664,52.499997 57.083331,53.333331 L7.0833321,98.749996 C5.4166641,100.41666 2.9166641,100.41666 1.2499962,98.749996 -0.41666794,97.083328 -0.41666794,94.583328 1.2499962,92.916664 L48.333331,49.999998 1.2499962,7.0833321 C-0.41666794,5.4166641 -0.41666794,2.9166641 1.2499962,1.25 2.0833282,0.41666794 3.1249962,0 4.1666641,0 z" />
  <PathGeometry x:Key="DownGeometry" o:Freeze="True" Figures="M512 801.6896L5.12 282.0096l58.1632-59.5968L512 682.3936l448.7168-460.0832 58.1632 59.5968-506.88 519.7824z" />
  <PathGeometry x:Key="UpGeometry" o:Freeze="True" Figures="M50.000001,0 L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288 z" />
  <PathGeometry x:Key="EyedropperGeometry" o:Freeze="True" Figures="M 803.328 104.619 c 17.5787 0 34.432 6.99733 46.848 19.456 l 40.6613 40.6187 c 25.8987 25.8987 25.9413 67.8827 0.085334 93.824 L 796.501 352.853 l 15.4453 15.4453 l 3.584 4.01067 a 42.624 42.624 0 0 1 -3.584 56.32 l -29.9093 29.8667 a 42.6667 42.6667 0 0 1 -60.288 0.085333 l -0.981333 -0.981333 l -372.395 370.688 c -14.848 14.9333 -34.1333 24.4907 -54.912 27.3067 l -7.808 0.725333 l -15.2747 15.1893 A 82.688 82.688 0 0 1 211.413 896 a 83.4987 83.4987 0 0 1 -63.872 -137.216 l 4.864 -5.29067 l 15.1893 -15.1467 c 1.152 -21.0347 9.17333 -41.0027 22.6987 -56.96 l 5.33333 -5.80267 l 372.48 -370.773 l -4.224 -4.18133 l -7.38133 -7.38133 l -3.584 -4.05333 a 42.6667 42.6667 0 0 1 3.54133 -56.32 l 29.8667 -29.8667 a 42.6667 42.6667 0 0 1 60.3307 0 l 15.4027 15.4453 l 94.3787 -94.3787 a 66.176 66.176 0 0 1 46.8907 -19.456 Z m -205.099 230.4 L 225.792 705.707 c -7.97867 8.02133 -13.2267 18.304 -15.0187 29.3547 l -0.597333 5.58933 l -0.896 16.2987 l -26.6667 26.6667 a 40.832 40.832 0 0 0 53.5893 61.2693 l 4.05333 -3.584 l 26.8373 -26.7947 l 16.3413 -0.853334 c 11.2213 -0.597333 21.888 -4.69333 30.6347 -11.8613 l 4.224 -3.79733 l 372.267 -370.603 l -92.3307 -92.4587 Z" />
  <PathGeometry x:Key="CalendarGeometry" o:Freeze="True" Figures="M 5.1,0.792 H 4.07 V 0.203 C 4.02,-0.067 3.55,-0.067 3.5,0.203 V 0.792 H 1.8 V 0.203 C 1.75,-0.067 1.28,-0.067 1.23,0.203 V 0.792 H 0.3 C 0.14,0.763 0,0.892 0,1.05 V 4.86 C 0,5.02 0.14,5.15 0.3,5.12 H 5.1 C 5.22,5.09 5.3,4.98 5.3,4.86 V 1.05 C 5.31,0.933 5.22,0.823 5.1,0.792 Z M 0.57,1.3 H 4.73 V 1.8 H 0.57 Z M 2.43,4.62 H 0.9 V 4.19 H 1.47 V 2.86 L 1.03,3 V 2.66 C 1.28,2.59 1.47,2.43 1.59,2.33 H 1.97 V 4.19 H 2.43 Z M 4.3,4.62 H 2.81 V 4.31 C 3.41,3.78 3.71,3.36 3.71,3.03 3.71,2.83 3.56,2.71 3.41,2.71 3.27,2.71 3.04,2.84 2.99,2.99 L 2.81,2.62 C 2.97,2.41 3.16,2.28 3.56,2.28 4.01,2.28 4.3,2.56 4.3,3 4.3,3.41 3.86,3.85 3.56,4.19 3.71,4.18 3.87,4.16 4.01,4.16 H 4.3 Z" />
  <PathGeometry x:Key="TickGeometry" o:Freeze="True" Figures="M392.533333 806.4L85.333333 503.466667l59.733334-59.733334 247.466666 247.466667L866.133333 213.333333l59.733334 59.733334L392.533333 806.4z" />
  <PathGeometry x:Key="CloseGeometry" o:Freeze="True" Figures="M844.8 241.066667l-61.866667-61.866667L512 452.266667 241.066667 179.2l-61.866667 61.866667L452.266667 512 179.2 782.933333l61.866667 61.866667L512 571.733333l270.933333 273.066667 61.866667-61.866667L571.733333 512z" FillRule="Nonzero" />
  <PathGeometry x:Key="RoundTriangleGeometry" o:Freeze="True" Figures="M912.724884 429.355681L208.797545 13.198638C151.603449-20.597874 64.01249 12.198741 64.01249 95.790112V927.904219c0 74.992259 81.391599 120.187594 144.785055 82.591475l703.927339-415.957064c62.793518-36.996181 62.993498-128.186768 0-165.182949z" />
  <PathGeometry x:Key="AddGeometry" o:Freeze="True" Figures="M848 474H550V152h-76v322H176c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h298v322h76V550h298c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z" />
  <SolidColorBrush x:Key="BorderBrush" Color="{DynamicResource BorderColor}" />
  <SolidColorBrush x:Key="BorderLightBrush" Color="{DynamicResource BorderLightColor}" />
  <SolidColorBrush x:Key="TextBrush" Color="{DynamicResource TextColor}" />
  <SolidColorBrush x:Key="TextLightBrush" Color="{DynamicResource TextLightColor}" />
  <SolidColorBrush x:Key="TextDarkBrush" Color="{DynamicResource TextDarkColor}" />
  <SolidColorBrush x:Key="TextInverseBrush" Color="{DynamicResource TextInverseColor}" />
  <SolidColorBrush x:Key="PrimaryBrush" Color="{DynamicResource PrimaryColor}" />
  <SolidColorBrush x:Key="PrimaryLightBrush" Color="{DynamicResource PrimaryLightColor}" />
  <SolidColorBrush x:Key="PrimaryDarkBrush" Color="{DynamicResource PrimaryDarkColor}" />
  <SolidColorBrush x:Key="PrimaryTextBrush" Color="{DynamicResource PrimaryTextColor}" />
  <SolidColorBrush x:Key="AccentBrush" Color="{DynamicResource AccentColor}" />
  <SolidColorBrush x:Key="AccentTextBrush" Color="{DynamicResource AccentTextColor}" />
  <SolidColorBrush x:Key="InfoBrush" Color="{DynamicResource InfoColor}" />
  <SolidColorBrush x:Key="InfoTextBrush" Color="{DynamicResource InfoTextColor}" />
  <SolidColorBrush x:Key="SuccessBrush" Color="{DynamicResource SuccessColor}" />
  <SolidColorBrush x:Key="SuccessTextBrush" Color="{DynamicResource SuccessTextColor}" />
  <SolidColorBrush x:Key="WarningBrush" Color="{DynamicResource WarningColor}" />
  <SolidColorBrush x:Key="WarningTextBrush" Color="{DynamicResource WarningTextColor}" />
  <SolidColorBrush x:Key="DangerBrush" Color="{DynamicResource DangerColor}" />
  <SolidColorBrush x:Key="DangerTextBrush" Color="{DynamicResource DangerTextColor}" />
  <SolidColorBrush x:Key="HighlightBrush" Color="{DynamicResource HighlightColor}" />
  <SolidColorBrush x:Key="HighlightTextBrush" Color="{DynamicResource HighlightTextColor}" />
  <SolidColorBrush x:Key="RegionBrush" Color="{DynamicResource RegionColor}" />
  <SolidColorBrush x:Key="RegionLight1Brush" Color="{DynamicResource RegionLight1Color}" />
  <SolidColorBrush x:Key="RegionLight2Brush" Color="{DynamicResource RegionLight2Color}" />
  <SolidColorBrush x:Key="RegionDark1Brush" Color="{DynamicResource RegionDark1Color}" />
  <SolidColorBrush x:Key="RegionDark2Brush" Color="{DynamicResource RegionDark2Color}" />
  <SolidColorBrush x:Key="ControlBrush" Color="{DynamicResource ControlColor}" />
  <SolidColorBrush x:Key="ControlTextBrush" Color="{DynamicResource ControlTextColor}" />
  <SolidColorBrush x:Key="ControlLight1Brush" Color="{DynamicResource ControlLight1Color}" />
  <SolidColorBrush x:Key="ControlLight2Brush" Color="{DynamicResource ControlLight2Color}" />
  <SolidColorBrush x:Key="ControlDark1Brush" Color="{DynamicResource ControlDark1Color}" />
  <SolidColorBrush x:Key="ControlDark2Brush" Color="{DynamicResource ControlDark2Color}" />
  <DrawingBrush x:Key="OpacityGridTileBrush" TileMode="Tile" Stretch="None" Viewport="0,0,16,16" ViewportUnits="Absolute">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <GeometryDrawing Brush="{StaticResource ControlBrush}">
          <GeometryDrawing.Geometry>
            <RectangleGeometry Rect="0,0,16,16" />
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
        <GeometryDrawing Brush="{StaticResource TextBrush}">
          <GeometryDrawing.Geometry>
            <GeometryGroup>
              <RectangleGeometry Rect="4,0,8,4" />
              <RectangleGeometry Rect="0,4,4,8" />
              <RectangleGeometry Rect="12,4,4,8" />
              <RectangleGeometry Rect="4,12,8,4" />
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <DrawingImage x:Key="Folder" o:Freeze="True">
    <DrawingImage.Drawing>
      <DrawingGroup>
        <GeometryDrawing Brush="#ffa000">
          <GeometryDrawing.Geometry>
            <PathGeometry FillRule="NonZero" Figures="M 14.889 14.775 H 1.253 A 0.663 0.663 0 0 1 0.589 14.111 V 3.36 A 0.663 0.663 0 0 1 1.252 2.697 h 13.637 a 0.663 0.663 0 0 1 0.663 0.663 v 10.751 a 0.663 0.663 0 0 1 -0.663 0.663 z" />
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
        <GeometryDrawing Brush="#ffa000">
          <GeometryDrawing.Geometry>
            <PathGeometry FillRule="NonZero" Figures="M 8.069 5.531 H 0.589 V 2.173 A 0.663 0.663 0 0 1 1.253 1.51 h 5.116 a 0.663 0.663 0 0 1 0.632 0.478 " />
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
        <GeometryDrawing Brush="#fff">
          <GeometryDrawing.Geometry>
            <PathGeometry FillRule="NonZero" Figures="M 13.855 13.948 H 2.29 A 0.663 0.663 0 0 1 1.627 13.285 V 4.364 A 0.663 0.663 0 0 1 2.29 3.701 h 11.565 a 0.663 0.663 0 0 1 0.663 0.663 v 8.927 a 0.663 0.663 0 0 1 -0.663 0.657 z" />
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
        <GeometryDrawing Brush="#ffca28">
          <GeometryDrawing.Geometry>
            <PathGeometry FillRule="NonZero" Figures="M 14.889 14.775 H 1.253 A 0.663 0.663 0 0 1 0.589 14.112 V 5.604 A 0.663 0.663 0 0 1 1.252 4.941 h 13.637 a 0.663 0.663 0 0 1 0.663 0.663 v 8.512 a 0.663 0.663 0 0 1 -0.663 0.663 z" />
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingGroup>
    </DrawingImage.Drawing>
  </DrawingImage>
  <converters:BoolReverseConverter x:Key="BoolReverseConverter" />
  <converters:BoolVisibilityConverter x:Key="BoolVisibilityConverter" />
  <converters:MultiBoolToBoolConverter x:Key="MultiBoolToBoolConverter" />
  <converters:BorderCircleConverter x:Key="BorderCircleConverter" />
  <converters:ObjectVisibilityConverter x:Key="ObjectVisibilityConverter" />
  <converters:ObjectBoolConverter x:Key="ObjectBoolConverter" />
  <converters:NumberOperateConverter x:Key="NumberOperateConverter" />
  <converters:StringCompareBoolConverter x:Key="StringCompareBoolConverter" />
  <converters:StringCompareVisibiltyConverter x:Key="StringCompareVisibiltyConverter" />
  <converters:ColorHexStringConverter x:Key="ColorHexStringConverter" />
  <converters:ColorSolidBurshConverter x:Key="ColorSolidBurshConverter" />
  <converters:MutexVisilityConverter x:Key="MutexVisilityConverter" />
  <converters:DateMaxDayConverter x:Key="DateMaxDayConverter" />
  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle RadiusX="3" RadiusY="3" Margin="-2" Opacity=".6" SnapsToDevicePixels="True" Stroke="{DynamicResource BorderLightBrush}" StrokeThickness="2" StrokeDashArray="1 1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BaseControlStyle" TargetType="Control">
    <Setter Property="Background" Value="{DynamicResource ControlBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource ControlTextBrush}" />
    <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Height" Value="Auto" />
    <Setter Property="Width" Value="Auto" />
  </Style>
  <Style TargetType="Control" BasedOn="{StaticResource BaseControlStyle}" />
  <Style x:Key="BaseInputStyle" TargetType="Control" BasedOn="{StaticResource BaseControlStyle}">
    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="MinHeight" Value="{DynamicResource InputMinHeight}" />
  </Style>
  <Style TargetType="TextBlock">
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
  </Style>
  <Style x:Key="FontIconBaseStyle" TargetType="local:FontIcon">
    <Setter Property="CornerRadius" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:FontIcon">
          <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" Padding="{TemplateBinding Padding}">
            <TextBlock FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Text="{TemplateBinding Glyph}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:FontIcon" BasedOn="{StaticResource FontIconBaseStyle}" />
  <Style TargetType="ToolTip" x:Key="ToolTipBaseStyle">
    <Setter Property="Padding" Value="6" />
    <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToolTip">
          <Border x:Name="templateRoot" Margin="8" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" BorderBrush="{StaticResource BorderBrush}" TextElement.Foreground="{StaticResource TextBrush}">
            <ContentPresenter x:Name="Presenter" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Content" Value="{x:Null}">
              <Setter TargetName="Presenter" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Content" Value="">
              <Setter TargetName="Presenter" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ToolTip" BasedOn="{StaticResource ToolTipBaseStyle}" />
  <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Background" Value="{DynamicResource RegionLight1Brush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Rectangle x:Name="rectangle" RadiusX="2" RadiusY="2" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" />
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource ControlBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
              <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource ControlLight1Brush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Background" Value="{DynamicResource RegionLight1Brush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Rectangle x:Name="rectangle" RadiusX="2" RadiusY="2" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" />
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource ControlBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
              <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource ControlLight1Brush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarBaseStyle" TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
    <Setter Property="Background" Value="{DynamicResource RegionDark1Brush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource SmallCornerRadius}" />
    <Setter Property="Width" Value="{StaticResource ScrollBarWidth}" />
    <Setter Property="MinWidth" Value="{StaticResource ScrollBarMinWidth}" />
    <Setter Property="Height" Value="Auto" />
    <Setter Property="Margin" Value="2,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid x:Name="Bg" SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
              <RowDefinition Height="auto" />
              <RowDefinition Height="0.00001*" />
              <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Row="1" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" />
            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
              <Track.Thumb>
                <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
              </Track.Thumb>
            </Track>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" Value=".56" TargetName="Bg" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Margin" Value="0,2,0,0" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="{StaticResource ScrollBarWidth}" />
        <Setter Property="MinHeight" Value="{StaticResource ScrollBarMinWidth}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid x:Name="Bg" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="auto" />
                  <ColumnDefinition Width="0.00001*" />
                  <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" />
                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                  <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                  </Track.Thumb>
                </Track>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter Property="Opacity" Value=".56" TargetName="Bg" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="ScrollBar" BasedOn="{StaticResource ScrollBarBaseStyle}" />
  <Style x:Key="ScrollViewerBaseStyle" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1" />
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanHorizontallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" CanVerticallyScroll="False" Grid.Column="0" Content="{TemplateBinding Content}" CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}" Grid.Row="0" />
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{DynamicResource TextDarkBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ScrollViewerBaseStyle}" />
  <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" Height="{StaticResource ExpenderArrowWidth}" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin=".5,.5" Stroke="{Binding RelativeSource={RelativeSource AncestorType=Expander},Path=Foreground}" SnapsToDevicePixels="false" StrokeThickness="1">
                <Path.RenderTransform>
                  <RotateTransform Angle="-90" />
                </Path.RenderTransform>
              </Path>
              <ContentPresenter Grid.Column="1" HorizontalAlignment="Stretch" Margin="3,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="RenderTransform" TargetName="arrow">
                <Setter.Value>
                  <RotateTransform Angle="0" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource TextLightBrush }" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource TextDarkBrush }" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" Value=".56" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Path x:Name="arrow" Height="{StaticResource ExpenderArrowWidth}" Stretch="Uniform" Data="M 1,1.5 L 4.5,5 L 8,1.5" RenderTransformOrigin=".5,.5" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{Binding RelativeSource={RelativeSource AncestorType=Expander},Path=Foreground}" SnapsToDevicePixels="false" StrokeThickness="1">
                <Path.RenderTransform>
                  <RotateTransform Angle="-90" />
                </Path.RenderTransform>
              </Path>
              <ContentPresenter Grid.Column="1" HorizontalAlignment="Stretch" Margin="3,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="RenderTransform" TargetName="arrow">
                <Setter.Value>
                  <RotateTransform Angle="180" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource TextLightBrush }" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource TextDarkBrush }" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" Value=".56" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.LayoutTransform>
                <TransformGroup>
                  <TransformGroup.Children>
                    <TransformCollection>
                      <RotateTransform Angle="90" />
                    </TransformCollection>
                  </TransformGroup.Children>
                </TransformGroup>
              </Grid.LayoutTransform>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid HorizontalAlignment="Left">
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="180" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" Height="{StaticResource ExpenderArrowWidth}" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin=".5,.5" Stroke="{Binding RelativeSource={RelativeSource AncestorType=Expander},Path=Foreground}" SnapsToDevicePixels="false" StrokeThickness="1">
                  <Path.RenderTransform>
                    <RotateTransform Angle="90" />
                  </Path.RenderTransform>
                </Path>
              </Grid>
              <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,0,0,0" RecognizesAccessKey="True" Grid.Row="1" Grid.Column="1" SnapsToDevicePixels="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="RenderTransform" TargetName="arrow">
                <Setter.Value>
                  <RotateTransform Angle="0" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource TextLightBrush }" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource TextDarkBrush }" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" Value=".56" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.LayoutTransform>
                <TransformGroup>
                  <TransformGroup.Children>
                    <TransformCollection>
                      <RotateTransform Angle="90" />
                    </TransformCollection>
                  </TransformGroup.Children>
                </TransformGroup>
              </Grid.LayoutTransform>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" Height="{StaticResource ExpenderArrowWidth}" Stretch="Uniform" HorizontalAlignment="Left" VerticalAlignment="Center" RenderTransformOrigin=".5,.5" Stroke="{Binding RelativeSource={RelativeSource AncestorType=Expander},Path=Foreground}" SnapsToDevicePixels="false" StrokeThickness="1">
                <Path.RenderTransform>
                  <RotateTransform Angle="-90" />
                </Path.RenderTransform>
              </Path>
              <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,0,0,0" RecognizesAccessKey="True" Grid.Column="1" SnapsToDevicePixels="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="RenderTransform" TargetName="arrow">
                <Setter.Value>
                  <RotateTransform Angle="0" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource TextLightBrush }" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource TextDarkBrush }" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" Value=".56" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderBaseStyle" TargetType="{x:Type Expander}">
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="local:ControlAttach.Padding" Value="0" />
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" SnapsToDevicePixels="true">
            <DockPanel>
              <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" DockPanel.Dock="Top" FontStretch="{TemplateBinding FontStretch}" Foreground="{TemplateBinding Foreground}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding local:ControlAttach.Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
              <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" />
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="true">
              <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Right">
              <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
              <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Up">
              <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
              <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Left">
              <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
              <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{DynamicResource TextDarkBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="Expander" BasedOn="{StaticResource ExpanderBaseStyle}" />
  <Style x:Key="ButtonBaseStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="Padding" Value="5,1" />
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".5" TargetName="bd" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlLight1Brush}" TargetName="bd" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionBrush}" TargetName="bd" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}" />
  <Style x:Key="TextButtonStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource BaseControlStyle}">
    <Setter Property="Padding" Value="0" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="bd" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}">
            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".5" TargetName="bd" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource TextLightBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource  TextDarkBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="RepeatButton" BasedOn="{StaticResource ButtonBaseStyle}" />
  <Style x:Key="ButtonPrimaryStyle" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".5" TargetName="bd" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource PrimaryLightBrush}" TargetName="bd" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource PrimaryDarkBrush}" TargetName="bd" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RadioToggleStyle" TargetType="RadioButton">
    <Setter Property="MinHeight" Value="{StaticResource InputMinHeight}" />
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="Background" Value="{DynamicResource ControlBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RadioButton">
          <Border x:Name="bd" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".56" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlLight2Brush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlLight1Brush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ToggleButtonBaseSyle" TargetType="ToggleButton" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="Padding" Value="5,1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Border x:Name="bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".5" TargetName="bd" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlLight2Brush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlLight1Brush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonBaseSyle}" />
  <Style x:Key="ToggleSwitchStyle" TargetType="ToggleButton" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="Background" Value="{StaticResource ControlBrush}" />
    <Setter Property="Foreground" Value="{StaticResource TextInverseBrush}" />
    <Setter Property="Height" Value="{StaticResource InputMinHeight}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Border x:Name="bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" local:ControlAttach.IsCircle="True" ClipToBounds="True">
            <Viewbox Height="{TemplateBinding Height}">
              <Canvas Width="68" Height="24">
                <Ellipse x:Name="path" Width="20" Height="20" Canvas.Left="2" Canvas.Top="2" Stroke="{StaticResource BorderBrush}" StrokeThickness="1" Fill="{TemplateBinding Foreground}" />
              </Canvas>
            </Viewbox>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Unchecked">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="path">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="2" />
                    </DoubleAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                      <EasingColorKeyFrame KeyTime="0:0:0.3" Value="{StaticResource ControlColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Indeterminate">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="path">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="24" />
                    </DoubleAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                      <EasingColorKeyFrame KeyTime="0:0:0.3" Value="{StaticResource ControlColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="path">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="46" />
                    </DoubleAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                      <EasingColorKeyFrame KeyTime="0:0:0.3" Value="{StaticResource PrimaryColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="{x:Null}">
              <Setter TargetName="path" Property="Fill" Value="{DynamicResource ControlLight2Brush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
              <Setter TargetName="path" Property="Fill" Value="{DynamicResource ControlLight1Brush}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="{x:Null}" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="path" Property="Fill" Value="{DynamicResource ControlLight1Brush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="False" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Fill" TargetName="path" Value="{DynamicResource ControlLight2Brush}" />
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Fill" TargetName="path" Value="{DynamicResource HighlightBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="bd" Property="Opacity" Value=".56" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:ToggleSwitch" BasedOn="{StaticResource ToggleSwitchStyle}" />
  <Style x:Key="TextBoxBaseStyle" TargetType="TextBox" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="CaretBrush" Value="{DynamicResource TextBrush}" />
    <Setter Property="SelectionBrush" Value="{DynamicResource PrimaryBrush}" />
    <Setter Property="Background" Value="{DynamicResource RegionDark2Brush}" />
    <Setter Property="Padding" Value="5,1" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="local:ControlAttach.ShowClear" Value="True" />
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="local:ControlAttach.Placeholder" Value="{x:Null}" />
    <Setter Property="local:ControlAttach.EnterMoveFocus" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Border x:Name="root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}">
            <Grid>
              <ScrollViewer x:Name="PART_ContentHost" Focusable="False" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
              <Border x:Name="clearButton" HorizontalAlignment="Right" Background="Transparent" Padding="3,0" Visibility="Collapsed">
                <Button Width="18" MinHeight="18" Padding="4" local:ControlAttach.CornerRadius="9" CommandParameter="{Binding .,RelativeSource={RelativeSource Mode=TemplatedParent}}" Command="{x:Static internals:InternalCommands.ClearTextboxCommand}" VerticalAlignment="Center" Focusable="False">
                  <Path Data="{StaticResource CloseGeometry}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" />
                </Button>
              </Border>
              <TextBlock IsHitTestVisible="False" Visibility="Collapsed" x:Name="placeholder" Opacity=".56" Text="{TemplateBinding local:ControlAttach.Placeholder}" Margin="{TemplateBinding Padding}" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionDark1Brush}" TargetName="root" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionDark2Brush}" TargetName="root" />
              <Setter Property="Visibility" Value="Visible" TargetName="clearButton" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
              <Setter Property="Visibility" Value="Collapsed" TargetName="clearButton" />
              <Setter Property="Visibility" Value="Visible" TargetName="placeholder" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Visibility" Value="Collapsed" TargetName="placeholder" />
            </Trigger>
            <Trigger Property="local:ControlAttach.Placeholder" Value="{x:Null}">
              <Setter Property="Visibility" Value="Collapsed" TargetName="placeholder" />
            </Trigger>
            <Trigger Property="local:ControlAttach.ShowClear" Value="False">
              <Setter Property="Visibility" Value="Hidden" TargetName="clearButton" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionBrush}" TargetName="root" />
              <Setter Property="Foreground" Value="{DynamicResource TextDarkBrush}" />
              <Setter Property="Visibility" Value="Collapsed" TargetName="clearButton" />
              <Setter Property="Visibility" Value="Collapsed" TargetName="placeholder" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".56" TargetName="root" />
              <Setter Property="Visibility" Value="Collapsed" TargetName="clearButton" />
              <Setter Property="Visibility" Value="Collapsed" TargetName="placeholder" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxBaseStyle}" />
  <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Focusable" Value="false" />
    <Setter Property="ClickMode" Value="Press" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="MinHeight" Value="{StaticResource InputMinHeight}" />
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true">
              <Path x:Name="arrow" Data="{StaticResource DownGeometry}" Width="12" Stretch="Uniform" Fill="{TemplateBinding  Foreground}" HorizontalAlignment="Center" Margin="{StaticResource ComboBoxItemPadding}" VerticalAlignment="Center" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultTopCornerRadius}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Background" Value="{DynamicResource ControlLight2Brush}" TargetName="templateRoot" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Background" Value="{DynamicResource ControlLight1Brush}" TargetName="templateRoot" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" Value=".56" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="ComboBox">
    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition MinWidth="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
      </Grid.ColumnDefinitions>
      <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Placement="Bottom" PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
        <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
          <Border x:Name="dropDownBorder" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource DefaultBottomCornerRadius}">
            <ScrollViewer x:Name="DropDownScrollViewer">
              <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                  <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                </Canvas>
                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
      <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" />
      <Border x:Name="border" Margin="{TemplateBinding BorderThickness}">
        <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="0,0,6,0" Background="Transparent" Padding="{StaticResource ComboBoxItemPadding}" local:ControlAttach.CornerRadius="{StaticResource DefaultLeftCornerRadius }" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Opacity" TargetName="border" Value="0.56" />
      </Trigger>
      <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
        <Setter Property="Margin" TargetName="shadow" Value="0,0,3,3" />
        <Setter Property="Color" TargetName="shadow" Value="#71000000" />
      </Trigger>
      <Trigger Property="HasItems" Value="false">
        <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="true" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
      </MultiTrigger>
      <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
        <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
        <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="ComboBoxTemplate" TargetType="ComboBox">
    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition MinWidth="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
      </Grid.ColumnDefinitions>
      <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Placement="Bottom" PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
        <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
          <Border x:Name="dropDownBorder" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource DefaultBottomCornerRadius}">
            <ScrollViewer x:Name="DropDownScrollViewer">
              <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                  <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                </Canvas>
                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
      <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" />
      <Grid Margin="{TemplateBinding Padding}">
        <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{StaticResource ComboBoxItemPadding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
        <Setter Property="Margin" TargetName="shadow" Value="0,0,3,3" />
        <Setter Property="Color" TargetName="shadow" Value="#71000000" />
      </Trigger>
      <Trigger Property="HasItems" Value="false">
        <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="true" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
      </MultiTrigger>
      <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
        <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
        <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="ComboBoxItemBaseStyle" TargetType="ComboBoxItem">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="MinHeight" Value="{StaticResource InputMinHeight}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="{StaticResource ComboBoxItemPadding}" />
    <Setter Property="Margin" Value="0,0,0,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Border x:Name="Bd" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource RegionLight1Brush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource PrimaryBrush}" />
              <Setter Property="Foreground" Value="White" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxBaseStyle" TargetType="ComboBox" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemBaseStyle}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="3" />
    <Style.Triggers>
      <Trigger Property="IsEditable" Value="True">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxBaseStyle}" />
  <SolidColorBrush x:Key="Item.MouseOver.Background" Color="{DynamicResource RegionLight2Color}" />
  <SolidColorBrush x:Key="Item.MouseOver.Border" Color="{DynamicResource BorderColor}" />
  <SolidColorBrush x:Key="Item.Selected.Background" Color="{DynamicResource PrimaryColor}" />
  <SolidColorBrush x:Key="Item.Selected.Border" Color="{DynamicResource PrimaryLightColor}" />
  <Style x:Key="ListBoxItemBaseStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource BaseControlStyle}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Padding" Value="4,1" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Item.MouseOver.Background}" />
              <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Item.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Item.Selected.Background}" />
              <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Item.Selected.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource TextDarkBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemBaseStyle}" />
  <SolidColorBrush x:Key="ListBox.Static.Background" Color="{DynamicResource RegionColor}" />
  <SolidColorBrush x:Key="ListBox.Static.Border" Color="{DynamicResource BorderColor}" />
  <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="{DynamicResource RegionLight2Color}" />
  <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="{DynamicResource BorderDarkColor}" />
  <Style x:Key="ListBoxBaseStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource BaseControlStyle}">
    <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}" />
    <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" SnapsToDevicePixels="true">
            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ListBox.Disabled.Background}" />
              <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ListBox.Disabled.Border}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsGrouping" Value="true" />
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ListBox" BasedOn="{StaticResource ListBoxBaseStyle}" />
  <Style x:Key="CalendarButtonBaseStyle" TargetType="{x:Type CalendarButton}" BasedOn="{StaticResource ButtonBaseStyle}">
    <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
    <Setter Property="MinWidth" Value="50" />
    <Setter Property="MinHeight" Value="50" />
    <Setter Property="Margin" Value="5" />
    <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=ActualWidth}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="HighlightBackground" To="0.5" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="HighlightBackground" To="0.75" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedBackground" To=".75" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Active" />
                <VisualState x:Name="Inactive">
                  <Storyboard>
                    <ColorAnimation Duration="0" Storyboard.TargetName="NormalText" To="{StaticResource TextDarkColor}" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CalendarButtonFocusStates">
                <VisualState x:Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ButtonFocusVisual" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CalendarButtonUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ButtonFocusVisual" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse Fill="{TemplateBinding Background}" Stretch="Uniform" />
            <Ellipse x:Name="SelectedBackground" Stretch="Uniform" Fill="{DynamicResource PrimaryBrush}" Opacity="0" />
            <Ellipse x:Name="HighlightBackground" Fill="{DynamicResource ControlLight2Brush}" Opacity="0" Stretch="Uniform" />
            <ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,1,5,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            <Ellipse x:Name="ButtonFocusVisual" IsHitTestVisible="false" Stretch="Uniform" Stroke="{DynamicResource BorderLightBrush}" Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="CalendarButton" BasedOn="{StaticResource CalendarButtonBaseStyle}" />
  <Style x:Key="CalendarDayButtonBaseStyle" TargetType="{x:Type CalendarDayButton}" BasedOn="{StaticResource ButtonBaseStyle}">
    <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
    <Setter Property="Width" Value="40" />
    <Setter Property="Height" Value="40" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarDayButton}">
          <Grid x:Name="root">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="HighlightBackground" To="0.5" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0" Storyboard.TargetName="root" To="1" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="HighlightBackground" To="0.75" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="HighlightBackground" To="0" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0" Storyboard.TargetName="NormalText" To=".35" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedBackground" To=".75" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CalendarButtonFocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CalendarButtonUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Active" />
                <VisualState x:Name="Inactive">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="root" To="0.56" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="RegularDay" />
                <VisualState x:Name="Today">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="TodayBackground" To="1" Storyboard.TargetProperty="Opacity" />
                    <ColorAnimation Duration="0" Storyboard.TargetName="NormalText" To="{StaticResource TextColor}" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="BlackoutDayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="NormalDay" />
                <VisualState x:Name="BlackoutDay">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="Blackout" To=".2" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse Fill="{TemplateBinding Background}" Stretch="Uniform" />
            <Ellipse x:Name="TodayBackground" Stretch="Uniform" Fill="{DynamicResource AccentBrush}" Opacity="0" />
            <Ellipse x:Name="SelectedBackground" Stretch="Uniform" Fill="{DynamicResource PrimaryBrush}" Opacity="0" />
            <Ellipse x:Name="HighlightBackground" Fill="{DynamicResource ControlLight2Brush}" Opacity="0" Stretch="Uniform" />
            <ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,1,5,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            <Path x:Name="Blackout" Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" Opacity="0" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Stretch" />
            <Ellipse x:Name="DayButtonFocusVisual" IsHitTestVisible="false" Stretch="Uniform" Stroke="{DynamicResource BorderLightBrush}" Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="CalendarDayButton" BasedOn="{StaticResource CalendarDayButtonBaseStyle}" />
  <Style x:Key="CalendarItemBaseStyle" TargetType="{x:Type CalendarItem}" BasedOn="{StaticResource BaseControlStyle}">
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarItem}">
          <ControlTemplate.Resources>
            <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
              <TextBlock Foreground="{DynamicResource TextDarkBrush}" FontFamily="Verdana" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,6,0,6" Text="{Binding}" VerticalAlignment="Center" />
            </DataTemplate>
          </ControlTemplate.Resources>
          <Grid x:Name="PART_Root">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="PART_DisabledVisual" To="1" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" MinHeight="30" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Button x:Name="PART_HeaderButton" Background="Transparent" Grid.Column="0" Focusable="False" FontFamily="Verdana" FontWeight="Bold" HorizontalAlignment="Stretch" Grid.Row="0" Cursor="Hand" VerticalAlignment="Center" HorizontalContentAlignment="Left" Margin="5,5,0,0" />
                <Button x:Name="PART_PreviousButton" Grid.Column="1" Focusable="False" Margin="5,5,0,0" Height="30" Grid.Row="0" Width="30" Background="Transparent">
                  <Grid>
                    <Path Data="{StaticResource RoundTriangleGeometry}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Height="{TemplateBinding FontSize}" Stretch="Uniform" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                      <Path.RenderTransform>
                        <RotateTransform Angle="-90" />
                      </Path.RenderTransform>
                    </Path>
                  </Grid>
                </Button>
                <Button x:Name="PART_NextButton" Grid.Column="2" Focusable="False" Margin="0,5,5,0" Height="30" Grid.Row="0" Width="30" Background="Transparent">
                  <Grid>
                    <Path Data="{StaticResource RoundTriangleGeometry}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Height="{TemplateBinding FontSize}" Stretch="Uniform" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                      <Path.RenderTransform>
                        <RotateTransform Angle="90" />
                      </Path.RenderTransform>
                    </Path>
                  </Grid>
                </Button>
                <Grid x:Name="PART_MonthView" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1" Visibility="Visible" Margin="5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                </Grid>
                <Grid x:Name="PART_YearView" Grid.ColumnSpan="3" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Hidden" Margin="5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                </Grid>
              </Grid>
            </Border>
            <Rectangle x:Name="PART_DisabledVisual" Fill="{DynamicResource BorderBrush}" Opacity="0" RadiusX="2" RadiusY="2" Stroke="{DynamicResource BorderBrush}" Stretch="Fill" StrokeThickness="1" Visibility="Collapsed" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
              <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
              <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
              <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
              <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="CalendarItem" BasedOn="{StaticResource CalendarItemBaseStyle}" />
  <Style x:Key="CalendarBaseStyle" TargetType="{x:Type Calendar}" BasedOn="{StaticResource BaseControlStyle}">
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="CalendarItemStyle" Value="{StaticResource CalendarItemBaseStyle}" />
    <Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonBaseStyle}" />
    <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonBaseStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Calendar}">
          <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
            <CalendarItem x:Name="PART_CalendarItem" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Style="{TemplateBinding CalendarItemStyle}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="Calendar" BasedOn="{StaticResource CalendarBaseStyle}" />
  <Style x:Key="DatePickerTextBoxBaseStyle" TargetType="{x:Type DatePickerTextBox}" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="5,1" />
    <Setter Property="IsEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="WatermarkStates">
                <VisualState x:Name="Unwatermarked" />
                <VisualState x:Name="Watermarked">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Watermark" To=".56" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" Opacity="1">
              <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <ContentControl x:Name="PART_Watermark" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}" Focusable="False" IsHitTestVisible="False" Opacity="0" />
                <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DatePickerBaseStyle" TargetType="{x:Type DatePicker}" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="IsTodayHighlighted" Value="True" />
    <Setter Property="SelectedDateFormat" Value="Short" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="local:ControlAttach.ShowClear" Value="True" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="CalendarStyle" Value="{StaticResource CalendarBaseStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePicker}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="PART_DisabledVisual" To="1" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="PART_Root" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <Button x:Name="PART_Button" HorizontalContentAlignment="Stretch" Padding="0">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="28" />
                  </Grid.ColumnDefinitions>
                  <Path Grid.Column="1" Height="16" HorizontalAlignment="Center" Stretch="Uniform" Fill="{TemplateBinding Foreground}" Data="{StaticResource CalendarGeometry}" Visibility="{Binding ElementName=clearButton,Path=Visibility,Converter={StaticResource MutexVisilityConverter}}" />
                  <DatePickerTextBox x:Name="PART_TextBox" Style="{StaticResource DatePickerTextBoxBaseStyle}" IsEnabled="False" Grid.Column="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Grid>
              </Button>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="28" />
                </Grid.ColumnDefinitions>
                <Border x:Name="clearButton" Grid.Column="1" Background="Transparent">
                  <Button Width="18" MinHeight="18" local:ControlAttach.CornerRadius="9" VerticalAlignment="Center" Padding="4" Background="{DynamicResource ControlLight2Brush}" Focusable="False" CommandParameter="{Binding .,RelativeSource={RelativeSource Mode=TemplatedParent}}" Command="{x:Static internals:InternalCommands.ClearDatePickerCommand}">
                    <Path Data="{StaticResource CloseGeometry}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" />
                  </Button>
                </Border>
              </Grid>
              <Grid x:Name="PART_DisabledVisual" Grid.Column="0" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False" />
              </Grid>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
              <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
            </DataTrigger>
            <Trigger Property="SelectedDate" Value="{x:Null}">
              <Setter Property="Visibility" Value="Hidden" TargetName="clearButton" />
              <Setter Property="Visibility" Value="Hidden" TargetName="clearButton" />
            </Trigger>
            <Trigger Property="local:ControlAttach.ShowClear" Value="False">
              <Setter Property="Visibility" Value="Hidden" TargetName="clearButton" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".56" />
              <Setter Property="Visibility" Value="Hidden" TargetName="clearButton" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="DatePicker" BasedOn="{StaticResource DatePickerBaseStyle}" />
  <Style x:Key="NumberSelectorButtonStyle" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource ButtonBaseStyle}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Visibility" Value="Collapsed" />
    <Setter Property="Foreground" Value="{StaticResource TextDarkBrush}" />
    <Setter Property="Margin" Value="7,0" />
    <Setter Property="Padding" Value="5,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border x:Name="bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".5" TargetName="bd" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="{StaticResource TextLightBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NumberSelectorBaseStyle" TargetType="local:NumberSelector">
    <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource TextDarkBrush}" />
    <Setter Property="ItemPadding" Value="5,8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:NumberSelector">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Grid>
              <skia:SKElement x:Name="PART_Canvas" IgnorePixelScaling="True" SnapsToDevicePixels="True" Margin="{TemplateBinding Padding}" />
              <RepeatButton x:Name="PART_PreviousButton" VerticalAlignment="Top" Background="{TemplateBinding Background}" Style="{StaticResource NumberSelectorButtonStyle}">
                <Grid>
                  <Path Data="{StaticResource RoundTriangleGeometry}" Fill="{Binding ElementName=PART_PreviousButton,Path=Foreground}" HorizontalAlignment="Center" Height="{TemplateBinding FontSize}" Stretch="Uniform" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                      <RotateTransform Angle="-90" />
                    </Path.RenderTransform>
                  </Path>
                </Grid>
              </RepeatButton>
              <RepeatButton x:Name="PART_NextButton" VerticalAlignment="Bottom" Background="{TemplateBinding Background}" Style="{StaticResource NumberSelectorButtonStyle}">
                <Grid>
                  <Path Data="{StaticResource RoundTriangleGeometry}" Fill="{Binding ElementName=PART_NextButton,Path=Foreground}" HorizontalAlignment="Center" Height="{TemplateBinding FontSize}" Stretch="Uniform" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                      <RotateTransform Angle="90" />
                    </Path.RenderTransform>
                  </Path>
                </Grid>
              </RepeatButton>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Visibility" Value="Visible" TargetName="PART_PreviousButton" />
              <Setter Property="Visibility" Value="Visible" TargetName="PART_NextButton" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:NumberSelector" BasedOn="{StaticResource NumberSelectorBaseStyle}" />
  <Style x:Key="TimeSelectorBaseStyle" TargetType="local:TimeSelector" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderBrush" Value="{DynamicResource TextDarkBrush}" />
    <Setter Property="CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TimeSelector">
          <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Grid>
              <ToggleButton x:Name="toggle" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Padding="0" IsChecked="False" Focusable="False">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition x:Name="ThirdPickerDisplayColumn" />
                  </Grid.ColumnDefinitions>
                  <Border x:Name="InnerBorder" Grid.Column="1" BorderThickness="1,0" BorderBrush="{TemplateBinding BorderBrush}" />
                  <TextBlock HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Hour,Mode=OneWay,StringFormat={}{0:D2}}" />
                  <TextBlock Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Minute,Mode=OneWay,StringFormat={}{0:D2}}" />
                  <TextBlock Grid.Column="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Second,Mode=OneWay,StringFormat={}{0:D2}}" />
                </Grid>
              </ToggleButton>
              <Popup x:Name="PART_Popup" AllowsTransparency="true" Placement="Center" PopupAnimation="{StaticResource {x:Static SystemParameters.ToolTipPopupAnimationKey}}" IsOpen="{Binding ElementName=toggle,Path=IsChecked, Mode=TwoWay}" StaysOpen="False">
                <Border x:Name="dropDownBorder" Padding="{TemplateBinding Padding}" Margin="2" MinWidth="{Binding ActualWidth, ElementName=toggle}" MaxHeight="{StaticResource DateTimeSelectorPopupMaxHeight}" Background="{DynamicResource RegionBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding CornerRadius}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" x:Name="ThirdPickerHostColumn" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" BorderThickness="0">
                      <local:NumberSelector FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" CornerRadius="4,0,0,4" TextColor="{StaticResource TextColor}" SelectedBackground="{StaticResource PrimaryColor}" SelectedTextColor="{StaticResource TextColor}" MinValue="0" MaxValue="23" CurrentValue="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Hour,Mode=TwoWay}" />
                    </Border>
                    <Border Grid.Column="1" BorderThickness="1,0" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                      <local:NumberSelector FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" CornerRadius="0" TextColor="{StaticResource TextColor}" SelectedBackground="{StaticResource PrimaryColor}" SelectedTextColor="{StaticResource TextColor}" MinValue="0" MaxValue="59" CurrentValue="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Minute,Mode=TwoWay}" />
                    </Border>
                    <Border Grid.Column="2" BorderThickness="0">
                      <local:NumberSelector FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" CornerRadius="0,4,4,0" TextColor="{StaticResource TextColor}" SelectedBackground="{StaticResource PrimaryColor}" SelectedTextColor="{StaticResource TextColor}" MinValue="0" MaxValue="59" CurrentValue="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Second,Mode=TwoWay}" />
                    </Border>
                  </Grid>
                </Border>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".56" />
            </Trigger>
            <Trigger Property="ShowSecond" Value="False">
              <Setter Property="BorderThickness" Value="1,0,0,0" TargetName="InnerBorder" />
              <Setter Property="Width" Value="0" TargetName="ThirdPickerHostColumn" />
              <Setter Property="Width" Value="0" TargetName="ThirdPickerDisplayColumn" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:TimeSelector" BasedOn="{StaticResource TimeSelectorBaseStyle}" />
  <Style x:Key="DateSelectorBaseStyle" TargetType="local:DateSelector" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderBrush" Value="{DynamicResource TextDarkBrush}" />
    <Setter Property="CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:DateSelector">
          <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Grid>
              <ToggleButton x:Name="toggle" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Padding="0" IsChecked="False" Focusable="False">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" x:Name="YearDisplayColumn" />
                    <ColumnDefinition />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Border x:Name="InnerBorder" Grid.Column="1" BorderThickness="1,0" BorderBrush="{TemplateBinding BorderBrush}" />
                  <TextBlock HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Year,Mode=OneWay,StringFormat={}{0:D2}}" />
                  <TextBlock Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Month,Mode=OneWay,StringFormat={}{0:D2}}" />
                  <TextBlock Grid.Column="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Day,Mode=OneWay,StringFormat={}{0:D2}}" />
                </Grid>
              </ToggleButton>
              <Popup x:Name="PART_Popup" AllowsTransparency="true" Placement="Center" PopupAnimation="{StaticResource {x:Static SystemParameters.ToolTipPopupAnimationKey}}" IsOpen="{Binding ElementName=toggle,Path=IsChecked, Mode=TwoWay}" StaysOpen="False">
                <Border x:Name="dropDownBorder" Padding="{TemplateBinding Padding}" Margin="2" MinWidth="{Binding ActualWidth, ElementName=toggle}" MaxHeight="{StaticResource DateTimeSelectorPopupMaxHeight}" Background="{DynamicResource RegionBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="{TemplateBinding CornerRadius}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" x:Name="YearHostColumn" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" BorderThickness="0">
                      <local:NumberSelector FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" CornerRadius="4,0,0,4" TextColor="{StaticResource TextColor}" SelectedBackground="{StaticResource PrimaryColor}" SelectedTextColor="{StaticResource TextColor}" MinValue="{Binding Mode=OneTime,Source={x:Static sys:DateTime.Now},Path=Year,Converter={StaticResource NumberOperateConverter},ConverterParameter=-100}" MaxValue="{Binding Mode=OneTime,Source={x:Static sys:DateTime.Now},Path=Year,Converter={StaticResource NumberOperateConverter},ConverterParameter=+100}" CurrentValue="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Year,Mode=TwoWay}" />
                    </Border>
                    <Border Grid.Column="1" BorderThickness="1,0" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                      <local:NumberSelector FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" CornerRadius="0" TextColor="{StaticResource TextColor}" SelectedBackground="{StaticResource PrimaryColor}" SelectedTextColor="{StaticResource TextColor}" MinValue="1" MaxValue="12" CurrentValue="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Month,Mode=TwoWay}" />
                    </Border>
                    <Border Grid.Column="2" BorderThickness="0">
                      <local:NumberSelector FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" CornerRadius="0,4,4,0" TextColor="{StaticResource TextColor}" SelectedBackground="{StaticResource PrimaryColor}" SelectedTextColor="{StaticResource TextColor}" MinValue="1" CurrentValue="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Day,Mode=TwoWay}">
                        <local:NumberSelector.MaxValue>
                          <MultiBinding Converter="{StaticResource DateMaxDayConverter}" Mode="OneWay">
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Year" />
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Month" />
                          </MultiBinding>
                        </local:NumberSelector.MaxValue>
                      </local:NumberSelector>
                    </Border>
                  </Grid>
                </Border>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".56" />
            </Trigger>
            <Trigger Property="ShowYear" Value="False">
              <Setter Property="BorderThickness" Value="0,0,1,0" TargetName="InnerBorder" />
              <Setter Property="Width" Value="0" TargetName="YearHostColumn" />
              <Setter Property="Width" Value="0" TargetName="YearDisplayColumn" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:DateSelector" BasedOn="{StaticResource DateSelectorBaseStyle}" />
  <Style x:Key="NumericBoxBaseStyle" TargetType="local:NumericBox" BasedOn="{StaticResource TextBoxBaseStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:NumericBox">
          <Border x:Name="root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}">
            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".56" TargetName="root" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionDark1Brush}" TargetName="root" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionDark2Brush}" TargetName="root" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionBrush}" TargetName="root" />
              <Setter Property="Foreground" Value="{DynamicResource TextDarkBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:NumericBox" BasedOn="{StaticResource NumericBoxBaseStyle}" />
  <Style x:Key="RangeBoxBaseStyle" TargetType="local:RangeBox" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="MinWidth" Value="100" />
    <Setter Property="Padding" Value="5,1" />
    <Setter Property="CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="ThumbBackground" Value="{DynamicResource PrimaryBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:RangeBox">
          <Border x:Name="RootBorder" ClipToBounds="True" SnapsToDevicePixels="True" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Border x:Name="PART_Thumb" HorizontalAlignment="Left" BorderThickness="0" Background="{TemplateBinding ThumbBackground}" SnapsToDevicePixels="True" />
              <local:NumericBox x:Name="PART_TextBox" Visibility="Hidden" NumericType="{TemplateBinding NumericType}" Padding="{TemplateBinding Padding}" BorderThickness="0" IsReadOnly="{TemplateBinding IsReadOnly}" VerticalAlignment="Stretch" VerticalContentAlignment="Center" local:ControlAttach.CornerRadius="{TemplateBinding CornerRadius}" InputScope="Number" TextWrapping="NoWrap" SnapsToDevicePixels="True" Text="{Binding Value,Mode=TwoWay,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
              <Grid Margin="{TemplateBinding Padding}" x:Name="InfoGrid">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Text="{TemplateBinding Title}" />
                <TextBlock Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Text="{Binding Text,RelativeSource={RelativeSource Mode=TemplatedParent},Mode=OneWay,StringFormat={}{0:F3}}" />
              </Grid>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.5" TargetName="RootBorder" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="RootBorder" Value="{DynamicResource ControlLight2Brush}" />
            </Trigger>
            <Trigger Property="IsEditing" Value="True">
              <Setter Property="Visibility" Value="Hidden" TargetName="InfoGrid" />
              <Setter Property="Visibility" Value="Visible" TargetName="PART_TextBox" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:RangeBox}" BasedOn="{StaticResource RangeBoxBaseStyle}" />
  <Style x:Key="NumericDownButtonStyle" TargetType="RepeatButton">
    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=local:NumericUpDown},Path=Foreground}" />
    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=local:NumericUpDown},Path=Background}" />
    <Setter Property="Width" Value="25" />
    <Setter Property="Padding" Value="5" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Path Height="12" Stretch="Uniform" Data="{Binding .}" Fill="{Binding RelativeSource={RelativeSource AncestorType=RepeatButton},Path=Foreground}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RepeatButton">
          <Border x:Name="bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}">
            <ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlLight2Brush}" TargetName="bd" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlBrush}" TargetName="bd" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NumericDownTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxBaseStyle}">
    <Setter Property="Cursor" Value="Arrow" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Border x:Name="root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}">
            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".5" TargetName="root" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlLight2Brush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Cursor" Value="IBeam" />
              <Setter Property="Background" Value="{DynamicResource RegionDark1Brush}" TargetName="root" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionBrush}" TargetName="root" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NumericUpDownBaseStyle" TargetType="local:NumericUpDown" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="Minimum" Value="0" />
    <Setter Property="Maximum" Value="100" />
    <Setter Property="Increment" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:NumericUpDown">
          <DockPanel>
            <RepeatButton x:Name="PART_Minus" Content="{StaticResource LeftGeometry}" DockPanel.Dock="Left" Style="{StaticResource NumericDownButtonStyle}" local:ControlAttach.CornerRadius="{StaticResource DefaultLeftCornerRadius}" />
            <RepeatButton x:Name="PART_Increase" Content="{StaticResource RightGeometry}" DockPanel.Dock="Right" Style="{StaticResource NumericDownButtonStyle}" local:ControlAttach.CornerRadius="{StaticResource DefaultRightCornerRadius}" />
            <local:NumericBox x:Name="PART_TextBox" NumericType="{TemplateBinding NumericType}" Background="{TemplateBinding Background}" Margin="-1,0" InputScope="Number" HorizontalContentAlignment="Center" local:ControlAttach.CornerRadius="0" IsReadOnly="{TemplateBinding IsReadOnly}" Style="{StaticResource NumericDownTextBoxStyle}" />
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlLight2Brush}" TargetName="PART_TextBox" />
              <Setter Property="Background" Value="{DynamicResource ControlLight1Brush}" TargetName="PART_Minus" />
              <Setter Property="Background" Value="{DynamicResource ControlLight1Brush}" TargetName="PART_Increase" />
            </Trigger>
            <Trigger Property="IsEditing" Value="True">
              <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Minus" />
              <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Increase" />
              <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" TargetName="PART_TextBox" />
              <Setter Property="HorizontalContentAlignment" Value="Left" TargetName="PART_TextBox" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
              <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Minus" />
              <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Increase" />
              <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" TargetName="PART_TextBox" />
            </Trigger>
            <Trigger Property="Increment" Value="0">
              <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Minus" />
              <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Increase" />
              <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" TargetName="PART_TextBox" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:NumericUpDown" BasedOn="{StaticResource NumericUpDownBaseStyle}" />
  <Style x:Key="PathSelectorBaseStyle" TargetType="local:PathSelector" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PathSelector">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <TextBox x:Name="PART_TextBox" Text="{TemplateBinding Path}" IsReadOnly="{TemplateBinding IsTextReadOnly}" />
            <Button x:Name="PART_Button" Margin="8,0,0,0" Content="..." Grid.Column="2" Padding="5,0" Width="{Binding RelativeSource={RelativeSource Self},Path=ActualHeight}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Button" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:PathSelector" BasedOn="{StaticResource PathSelectorBaseStyle}" />
  <Style x:Key="ColorSpectrumStyle" TargetType="local:ColorSpectrum">
    <Setter Property="SpectrumStyle" Value="Square" />
    <Setter Property="Spacing" Value=".14" />
    <Setter Property="MinHeight" Value="168" />
    <Setter Property="MinWidth" Value="168" />
  </Style>
  <Style TargetType="local:ColorSpectrum" BasedOn="{StaticResource ColorSpectrumStyle}" />
  <Style x:Key="HexColorTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxBaseStyle}">
    <Setter Property="Background" Value="{DynamicResource ControlBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="0,2,5,2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Border x:Name="root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <TextBlock Text="#" TextAlignment="Center" Margin="5,0,0,0" />
              <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost" Focusable="False" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".56" TargetName="root" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionDark1Brush}" TargetName="root" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionDark2Brush}" TargetName="root" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ColorPickerBaseStyle" TargetType="local:ColorPicker">
    <Setter Property="MinWidth" Value="183" />
    <Setter Property="Padding" Value="5" />
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
    <Setter Property="SpectrumStyle" Value="Disc" />
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ColorPicker">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" Padding="{TemplateBinding Padding}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <local:ColorSpectrum x:Name="PART_ColorSpectrum" SpectrumStyle="{TemplateBinding SpectrumStyle}" />
              <Border Grid.Row="1" Margin="{TemplateBinding Padding}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="{StaticResource DefaultCornerRadius}">
                <UniformGrid Rows="1">
                  <RadioButton x:Name="rgbTab" Content="RGB" IsChecked="True" Style="{StaticResource RadioToggleStyle}" local:ControlAttach.CornerRadius="{StaticResource DefaultLeftCornerRadius}" />
                  <RadioButton x:Name="hsvTab" Content="HSV" Style="{StaticResource RadioToggleStyle}" local:ControlAttach.CornerRadius="{StaticResource DefaultRightCornerRadius}" />
                </UniformGrid>
              </Border>
              <StackPanel Grid.Row="2" Orientation="Vertical" Margin="{TemplateBinding Padding}">
                <Border Visibility="{Binding ElementName=rgbTab,Path=IsChecked,Converter={StaticResource BoolVisibilityConverter}}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="{StaticResource DefaultCornerRadius}">
                  <local:StackPanel Orientation="Vertical" Spacing="1">
                    <local:RangeBox Title="{lang:Lang Rgb_Red}" CornerRadius="{StaticResource DefaultTopCornerRadius}" Minimum="0" Maximum="255" NumericType="UInt" SmallChange="1" LargeChange="10" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Red,Mode=TwoWay}" />
                    <local:RangeBox Title="{lang:Lang Rgb_Green}" CornerRadius="0" Minimum="0" Maximum="255" NumericType="UInt" SmallChange="1" LargeChange="10" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Green,Mode=TwoWay}" />
                    <local:RangeBox Title="{lang:Lang Rgb_Blue}" CornerRadius="{StaticResource DefaultBottomCornerRadius}" Minimum="0" Maximum="255" NumericType="UInt" SmallChange="1" LargeChange="10" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Blue,Mode=TwoWay}" />
                  </local:StackPanel>
                </Border>
                <Border Visibility="{Binding ElementName=hsvTab,Path=IsChecked,Converter={StaticResource BoolVisibilityConverter}}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="{StaticResource DefaultCornerRadius}">
                  <local:StackPanel Orientation="Vertical" Spacing="1">
                    <local:RangeBox Title="{lang:Lang Hsv_Hue}" CornerRadius="{StaticResource DefaultTopCornerRadius}" Minimum="0" Maximum="360" NumericType="UInt" SmallChange="1" LargeChange="10" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Hue,Mode=TwoWay}" />
                    <local:RangeBox Title="{lang:Lang Hsv_Saturation}" CornerRadius="0" Minimum="0" Maximum="1" Decimals="3" NumericType="UFloat" SmallChange="0.01" LargeChange="0.1" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Saturation,Mode=TwoWay}" />
                    <local:RangeBox Title="{lang:Lang Hsv_Value}" CornerRadius="{StaticResource DefaultBottomCornerRadius}" Minimum="0" Maximum="1" Decimals="3" NumericType="UFloat" SmallChange="0.01" LargeChange="0.1" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Brightness,Mode=TwoWay}" />
                  </local:StackPanel>
                </Border>
                <local:RangeBox Title="{lang:Lang Opacity}" BorderThickness="1" Margin="0,3,0,0" Minimum="0" Maximum="255" NumericType="UInt" SmallChange="1" LargeChange="10" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Alpha,Mode=TwoWay}" />
                <DockPanel Margin="0,3,0,0">
                  <Button x:Name="PART_PickScreenButton" Margin="7,0,0,0" DockPanel.Dock="Right" BorderThickness="1">
                    <Path Fill="{TemplateBinding Foreground}" Data="{StaticResource EyedropperGeometry}" Stretch="Uniform" Height="16" />
                  </Button>
                  <TextBox x:Name="PART_TextBox" Style="{StaticResource HexColorTextBoxStyle}" MaxLength="8" BorderThickness="1" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=SelectedColor,Converter={StaticResource ColorHexStringConverter}}" IsReadOnly="{Binding ElementName=hsvTab,Path=IsChecked}" />
                </DockPanel>
              </StackPanel>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:ColorPicker" BasedOn="{StaticResource ColorPickerBaseStyle}" />
  <Style x:Key="StringItemsViewTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxBaseStyle}">
    <Setter Property="MinWidth" Value="50" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Border x:Name="root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="auto" />
              </Grid.ColumnDefinitions>
              <ScrollViewer x:Name="PART_ContentHost" Focusable="False" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
              <Border Grid.Column="1" x:Name="deleteButton" Background="Transparent" Padding="3,0">
                <Button MinHeight="19" Width="19" Height="19" Padding="0" local:ControlAttach.CornerRadius="10" CommandParameter="{Binding Tag,RelativeSource={RelativeSource Mode=TemplatedParent}}" Command="{Binding RelativeSource={RelativeSource AncestorType=local:StringItemsView},Path=DeleteItemCommand}" VerticalAlignment="Center" Focusable="False" Visibility="{Binding  RelativeSource={RelativeSource AncestorType=local:StringItemsView},Path=ShowOperationButtons,Converter={StaticResource BoolVisibilityConverter}}">
                  <Path Height="10" Data="{StaticResource CloseGeometry}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" />
                </Button>
              </Border>
              <TextBlock IsHitTestVisible="False" Visibility="Collapsed" x:Name="placeholder" Opacity=".56" Text="{TemplateBinding local:ControlAttach.Placeholder}" Margin="{TemplateBinding Padding}" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionDark1Brush}" TargetName="root" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionDark2Brush}" TargetName="root" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionBrush}" TargetName="root" />
              <Setter Property="Foreground" Value="{DynamicResource TextDarkBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".56" TargetName="root" />
              <Setter Property="Visibility" Value="Collapsed" TargetName="deleteButton" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="StringItemsViewBaseStyle" TargetType="local:StringItemsView">
    <Setter Property="TextBoxStyle" Value="{StaticResource StringItemsViewTextBoxStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:StringItemsView">
          <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
            <local:WrapPanel x:Name="PART_ItemsHost" Spacing="5" Orientation="Horizontal">
              <Button x:Name="PART_AddButton" MinHeight="20" Height="20" Width="20" Padding="0" local:ControlAttach.CornerRadius="10" Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ShowOperationButtons,Converter={StaticResource BoolVisibilityConverter}}">
                <local:FontIcon Glyph="" />
              </Button>
            </local:WrapPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:StringItemsView" BasedOn="{StaticResource StringItemsViewBaseStyle}" />
  <Style x:Key="ColorPickerEditorToggleButtonStyle" TargetType="ToggleButton">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Margin="1" CornerRadius="{StaticResource DefaultCornerRadius}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
            <Border CornerRadius="{StaticResource DefaultLeftCornerRadius}" SnapsToDevicePixels="True" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=TemplatedParent.NoAlphaColor,Converter={StaticResource ColorSolidBurshConverter}}" />
            <Border Grid.Column="1" CornerRadius="{StaticResource DefaultRightCornerRadius}" SnapsToDevicePixels="True" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=TemplatedParent.SelectedColor,Converter={StaticResource ColorSolidBurshConverter}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="editor:ColorPickerEditor" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="Focusable" Value="True" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="Background" Value="{DynamicResource OpacityGridTileBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="editor:ColorPickerEditor">
          <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" VerticalOffset="-1" Placement="Top" PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <Border x:Name="dropDownBorder" Padding="{TemplateBinding Padding}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" Background="{TemplateBinding Background}" Margin="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource DefaultCornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                  <local:ColorPicker Style="{StaticResource ColorPickerBaseStyle}" x:Name="PART_ColorPicker" KeyboardNavigation.DirectionalNavigation="Contained" />
                </Grid>
              </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" Focusable="False" ClickMode="Press" IsTabStop="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ColorPickerEditorToggleButtonStyle}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PropertyItemToolTipBaseStyle" BasedOn="{StaticResource ToolTipBaseStyle}" TargetType="ToolTip">
    <Setter Property="Padding" Value="10" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToolTip">
          <Border Margin="8" Background="{StaticResource RegionBrush}" Padding="{TemplateBinding Padding}" BorderThickness="1" CornerRadius="{Binding Path=(local:ControlAttach.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{DynamicResource BorderBrush}" TextElement.Foreground="{StaticResource TextBrush}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <ContentPresenter x:Name="Presenter" Margin="0,0,0,8" />
              <StackPanel Grid.Row="1" Orientation="Horizontal">
                <TextBlock FontWeight="Bold" Text="{Binding PropertyTypeName,RelativeSource={RelativeSource AncestorType=local:PropertyItem}}" />
                <TextBlock Text="{Binding PropertyName,RelativeSource={RelativeSource AncestorType=local:PropertyItem}}" Margin="6,0,0,0" />
              </StackPanel>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Content" Value="{x:Null}">
              <Setter TargetName="Presenter" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Content" Value="">
              <Setter TargetName="Presenter" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="PropertyItemNormalTemplate" TargetType="local:PropertyItem">
    <Border x:Name="bd" Padding="7,1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
      <Grid Margin="{TemplateBinding Padding}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width=".38*" MinWidth="81" />
          <ColumnDefinition Width=".62*" />
        </Grid.ColumnDefinitions>
        <TextBlock x:Name="header" Margin="0,0,10,0" Text="{TemplateBinding DisplayName}" TextTrimming="CharacterEllipsis" TextAlignment="Right">
          <TextBlock.ToolTip>
            <ToolTip Style="{StaticResource PropertyItemToolTipBaseStyle}" Content="{TemplateBinding Description}" />
          </TextBlock.ToolTip>
        </TextBlock>
        <ContentPresenter Grid.Column="1" ContentSource="EditorElement" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      </Grid>
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="PropertyItemExpanderTemplate" TargetType="local:PropertyItem">
    <Expander Margin="{TemplateBinding Padding}" IsExpanded="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" local:ControlAttach.Padding="22,3,10,5" HorizontalContentAlignment="Stretch" local:ControlAttach.CornerRadius="{StaticResource DefaultBottomCornerRadius}">
      <Expander.Header>
        <DockPanel>
          <ContentPresenter ContentSource="OperationContent" DockPanel.Dock="Right" />
          <TextBlock Text="{TemplateBinding DisplayName}" TextTrimming="CharacterEllipsis" TextAlignment="Left">
            <TextBlock.ToolTip>
              <ToolTip Style="{StaticResource PropertyItemToolTipBaseStyle}" Content="{TemplateBinding Description}" />
            </TextBlock.ToolTip>
          </TextBlock>
        </DockPanel>
      </Expander.Header>
      <Border Background="{TemplateBinding Background}" Padding="0,5,0,0">
        <ContentPresenter ContentSource="EditorElement" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
      </Border>
    </Expander>
  </ControlTemplate>
  <Style x:Key="PropertyItemBaseStyle" TargetType="local:PropertyItem">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Margin" Value="0,0,0,6" />
    <Setter Property="MinHeight" Value="{StaticResource InputMinHeight}" />
    <Setter Property="Height" Value="auto" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Template" Value="{StaticResource PropertyItemNormalTemplate}" />
    <Style.Triggers>
      <Trigger Property="UseExpanderStyle" Value="True">
        <Setter Property="Template" Value="{StaticResource PropertyItemExpanderTemplate}" />
        <Setter Property="Background" Value="{DynamicResource RegionLight2Brush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="PropertyItemsControlBaseStyle" TargetType="local:PropertyItemsControl">
    <Setter Property="ItemContainerStyle" Value="{StaticResource PropertyItemBaseStyle}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PropertyItemsControl">
          <ScrollViewer Focusable="false" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </ScrollViewer>
          <ControlTemplate.Triggers>
            <Trigger Property="IsGrouping" Value="False">
              <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PropertyGroupItemBaseStyle" TargetType="GroupItem">
    <Setter Property="Margin" Value="0,0,0,2" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="local:ControlAttach.Padding" Value="5" />
    <Setter Property="Background" Value="{DynamicResource RegionLight1Brush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="GroupItem">
          <Expander Header="{Binding Name}" IsExpanded="True" Padding="{TemplateBinding Padding}" local:ControlAttach.Padding="{TemplateBinding local:ControlAttach.Padding}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}">
            <ItemsPresenter />
          </Expander>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SubPropertyItemsControlBaseStyle" TargetType="local:PropertyItemsControl">
    <Setter Property="ItemContainerStyle" Value="{StaticResource PropertyItemBaseStyle}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PropertyItemsControl">
          <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SubPropertyGridBaseStyle" TargetType="{x:Type local:PropertyGrid}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PropertyGrid">
          <Border SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}" BorderThickness="0">
            <local:PropertyItemsControl x:Name="PART_ItemsControl" Margin="{TemplateBinding Padding}" Style="{StaticResource SubPropertyItemsControlBaseStyle}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PropertyGridBaseStyle" TargetType="{x:Type local:PropertyGrid}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Padding" Value="7" />
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
    <Setter Property="CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PropertyGrid">
          <ControlTemplate.Resources>
            <Style TargetType="local:PropertyGrid" BasedOn="{StaticResource SubPropertyGridBaseStyle}" />
          </ControlTemplate.Resources>
          <Border SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <DockPanel>
              <local:PropertyItemsControl x:Name="PART_ItemsControl" Margin="{TemplateBinding Padding}" Style="{StaticResource PropertyItemsControlBaseStyle}">
                <local:PropertyItemsControl.GroupStyle>
                  <GroupStyle ContainerStyle="{StaticResource PropertyGroupItemBaseStyle}" />
                </local:PropertyItemsControl.GroupStyle>
              </local:PropertyItemsControl>
            </DockPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:PropertyGrid}" BasedOn="{StaticResource PropertyGridBaseStyle}" />
</ResourceDictionary>