<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:linq="clr-namespace:System.Linq;assembly=System.Core"
                    xmlns:local="clr-namespace:Leisn.Xaml.Wpf.Controls"
                    xmlns:internals="clr-namespace:Leisn.Xaml.Wpf.Internals">

  <Style x:Key="DatePickerTextBoxBaseStyle" TargetType="{x:Type DatePickerTextBox}" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Padding" Value="5,1"/>
    <Setter Property="IsEnabled" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="WatermarkStates">
                <VisualState x:Name="Unwatermarked"/>
                <VisualState x:Name="Watermarked">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Watermark" To=".56" Storyboard.TargetProperty="Opacity"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="Focused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" Opacity="1" >
              <Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Border x:Name="watermark_decorator" >
                  <ContentControl Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}" x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="False" Opacity="0"/>
                </Border>
                <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DatePickerBaseStyle" TargetType="{x:Type DatePicker}" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    <Setter Property="IsTodayHighlighted" Value="True"/>
    <Setter Property="SelectedDateFormat" Value="Short"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}"/>
    <Setter Property="local:ControlAttach.ShowClear" Value="True"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="CalendarStyle" Value="{StaticResource CalendarBaseStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePicker}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
                  CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="PART_DisabledVisual" To="1" Storyboard.TargetProperty="Opacity"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="PART_Root" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <Button x:Name="PART_Button" HorizontalContentAlignment="Stretch" Padding="0">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="28"/>
                  </Grid.ColumnDefinitions>
                  <!--<local:FontIcon Grid.Column="1" Margin="0,1,0,-1"
                                  FontFamily="{StaticResource SymbolFontFamily}" Glyph="&#xE787;" 
                                  Foreground="{TemplateBinding Foreground}"
                                  Visibility="{Binding ElementName=clearButton,Path=Visibility,Converter={StaticResource MutexVisilityConverter}}"/>-->
                  <Path Grid.Column="1" Height="16" HorizontalAlignment="Center" Stretch="Uniform"
                        Fill="{TemplateBinding Foreground}" Data="{StaticResource CalendarGeometry}"
                        Visibility="{Binding ElementName=clearButton,Path=Visibility,Converter={StaticResource MutexVisilityConverter}}"/>
                  <DatePickerTextBox x:Name="PART_TextBox" Style="{StaticResource DatePickerTextBoxBaseStyle}"
                                 IsEnabled="False" Grid.Column="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalContentAlignment="Center" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
              </Button>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="28"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="clearButton" Grid.Column="1" Background="Transparent">
                  <Button Width="18" MinHeight="18" local:ControlAttach.CornerRadius="9" VerticalAlignment="Center" Padding="4"
                          Background="{DynamicResource ControlLight2Brush}" Focusable="False"
                          CommandParameter="{Binding .,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                          Command="{x:Static internals:InternalCommands.ClearDatePickerCommand}">
                    <Path Data="{StaticResource CloseGeometry}" Fill="{TemplateBinding Foreground}" Stretch="Uniform"/>
                  </Button>
                </Border>
              </Grid>
              <Grid x:Name="PART_DisabledVisual" Grid.Column="0" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
              </Grid>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
              <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
            </DataTrigger>
            <Trigger Property="SelectedDate" Value="{x:Null}">
              <Setter Property="Visibility" Value="Hidden" TargetName="clearButton"/>
              <Setter Property="Visibility" Value="Hidden" TargetName="clearButton"/>
            </Trigger>
            <Trigger Property="local:ControlAttach.ShowClear" Value="False">
              <Setter Property="Visibility" Value="Hidden" TargetName="clearButton"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".56"/>
              <Setter Property="Visibility" Value="Hidden" TargetName="clearButton"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="DatePicker" BasedOn="{StaticResource DatePickerBaseStyle}"/>

  <ObjectDataProvider x:Key="Hours" ObjectType="{x:Type linq:Enumerable}" MethodName="Range">
    <ObjectDataProvider.MethodParameters>
      <sys:Int32>0</sys:Int32>
      <sys:Int32>24</sys:Int32>
    </ObjectDataProvider.MethodParameters>
  </ObjectDataProvider>
  <ObjectDataProvider x:Key="Minues" ObjectType="{x:Type linq:Enumerable}" MethodName="Range">
    <ObjectDataProvider.MethodParameters>
      <sys:Int32>0</sys:Int32>
      <sys:Int32>60</sys:Int32>
    </ObjectDataProvider.MethodParameters>
  </ObjectDataProvider>

  <Style x:Key="TimePickerListBoxItemStyle" TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemBaseStyle}">
    <Setter Property="Padding" Value="0,5"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
  </Style>

  <Style x:Key="TimePickerBaseStyle" TargetType="local:TimePicker" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="BorderBrush" Value="{StaticResource TextDarkBrush}"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TimePicker">
          <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}">
            <Grid>
              <ToggleButton x:Name="toggle" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Padding="0" IsChecked="False">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                  </Grid.ColumnDefinitions>
                  <Border x:Name="InnerBorder" Grid.Column="1" BorderThickness="1,0" BorderBrush="{TemplateBinding BorderBrush}"/>
                  <TextBlock HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Hour,Mode=OneWay,StringFormat={}{0:D2}}"/>
                  <TextBlock Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Minute,Mode=OneWay,StringFormat={}{0:D2}}"/>
                  <TextBlock x:Name="SecondBlock" Grid.Column="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Second,Mode=OneWay,StringFormat={}{0:D2}}"/>
                </Grid>
              </ToggleButton>
              <Popup x:Name="PART_Popup" AllowsTransparency="true"
                   Placement="Center" PopupAnimation="{StaticResource {x:Static SystemParameters.ToolTipPopupAnimationKey}}"
                   IsOpen="{Binding ElementName=toggle,Path=IsChecked, Mode=TwoWay}" StaysOpen="False">
                <Border x:Name="dropDownBorder" Padding="{TemplateBinding Padding}"
                      MinWidth="{Binding ActualWidth, ElementName=toggle}" MaxHeight="{DynamicResource TimePickerPopupMaxHeight}" Margin="2"
                      Background="{DynamicResource RegionBrush}"
                      BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                      CornerRadius="{StaticResource DefaultCornerRadius}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition/>
                      <ColumnDefinition/>
                      <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <ListBox Grid.Column="0" BorderThickness="0" ItemsSource="{Binding Source={StaticResource Hours}}" ItemContainerStyle="{StaticResource TimePickerListBoxItemStyle}"/>
                    <ListBox Grid.Column="1" BorderThickness="1,0" local:ControlAttach.CornerRadius="0" ItemsSource="{Binding Source={StaticResource Minues}}" ItemContainerStyle="{StaticResource TimePickerListBoxItemStyle}"/>
                    <ListBox Grid.Column="2" BorderThickness="0" ItemsSource="{Binding Source={StaticResource Minues}}" ItemContainerStyle="{StaticResource TimePickerListBoxItemStyle}"/>

                    <Border Grid.Row="1" Grid.ColumnSpan="5" BorderThickness="0,1,0,0" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                      <UniformGrid  Rows="1">
                        <Button Focusable="False" Background="Transparent"  local:ControlAttach.CornerRadius="0,0,0,3" Padding="0,8">
                          <Path Data="{StaticResource TickGeometry}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" Height="{TemplateBinding FontSize}"/>
                        </Button>
                        <Button Focusable="False" Background="Transparent" local:ControlAttach.CornerRadius="0,0,3,0" Padding="0,8">
                          <Path Data="{StaticResource CloseGeometry}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" Height="{TemplateBinding FontSize}"/>
                        </Button>
                      </UniformGrid>
                    </Border>
                  </Grid>
                </Border>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".56"/>
            </Trigger>
            <Trigger Property="ShowSecond" Value="False">
              <Setter Property="Visibility" Value="Collapsed" TargetName="SecondBlock" />
              <Setter Property="BorderThickness" Value="1,0,0,0" TargetName="InnerBorder" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:TimePicker" BasedOn="{StaticResource TimePickerBaseStyle}"/>
</ResourceDictionary>