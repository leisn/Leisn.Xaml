<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Leisn.Xaml.Wpf.Controls"
                    xmlns:skia="clr-namespace:SkiaSharp.Views.WPF;assembly=SkiaSharp.Views.WPF">

  <Style x:Key="NumberSelectorButtonStyle" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource ButtonBaseStyle}">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Visibility" Value="Collapsed"/>
    <Setter Property="Foreground" Value="{StaticResource TextDarkBrush}"/>
    <Setter Property="Margin" Value="7,0"/>
    <Setter Property="Padding" Value="5,3"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border x:Name="bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".5" TargetName="bd" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="{StaticResource TextLightBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="NumberSelectorBaseStyle" TargetType="local:NumberSelector">
    <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource TextDarkBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:NumberSelector">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{TemplateBinding CornerRadius}">
            <Grid>
              <skia:SKElement SnapsToDevicePixels="True" IgnorePixelScaling="True" x:Name="PART_Canvas" Margin="{TemplateBinding Padding}"/>
              <RepeatButton x:Name="PART_PreviousButton" VerticalAlignment="Top"
                            Background="{TemplateBinding Background}"
                            Style="{StaticResource NumberSelectorButtonStyle}">
                <Grid>
                  <Path Data="{StaticResource RoundTriangleGeometry}" Fill="{Binding ElementName=PART_PreviousButton,Path=Foreground}"
                          HorizontalAlignment="Center" Height="{TemplateBinding FontSize}" Stretch="Uniform" VerticalAlignment="Center"
                          RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                      <RotateTransform Angle="-90"/>
                    </Path.RenderTransform>
                  </Path>
                </Grid>
              </RepeatButton>
              <RepeatButton x:Name="PART_NextButton" VerticalAlignment="Bottom"
                            Background="{TemplateBinding Background}"
                            Style="{StaticResource NumberSelectorButtonStyle}">
                <Grid>
                  <Path Data="{StaticResource RoundTriangleGeometry}" Fill="{Binding ElementName=PART_NextButton,Path=Foreground}"
                          HorizontalAlignment="Center" Height="{TemplateBinding FontSize}" Stretch="Uniform" VerticalAlignment="Center"
                          RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                      <RotateTransform Angle="90"/>
                    </Path.RenderTransform>
                  </Path>
                </Grid>
              </RepeatButton>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Visibility" Value="Visible" TargetName="PART_PreviousButton"/>
              <Setter Property="Visibility" Value="Visible" TargetName="PART_NextButton"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:NumberSelector" BasedOn="{StaticResource NumberSelectorBaseStyle}"/>

  <Style x:Key="TimeSelectorBaseStyle" TargetType="local:TimeSelector" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="BorderBrush" Value="{StaticResource TextDarkBrush}"/>
    <Setter Property="CornerRadius" Value="{StaticResource DefaultCornerRadius}"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TimeSelector">
          <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{TemplateBinding CornerRadius}">
            <Grid>
              <ToggleButton x:Name="toggle" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Padding="0" IsChecked="False" Focusable="False">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                  </Grid.ColumnDefinitions>
                  <Border x:Name="InnerBorder" Grid.Column="1" BorderThickness="1,0" BorderBrush="{TemplateBinding BorderBrush}"/>
                  <TextBlock HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Hour,Mode=OneWay,StringFormat={}{0:D2}}"/>
                  <TextBlock Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Minute,Mode=OneWay,StringFormat={}{0:D2}}"/>
                  <TextBlock x:Name="SecondBlock" Grid.Column="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Second,Mode=OneWay,StringFormat={}{0:D2}}"/>
                </Grid>
              </ToggleButton>
              <Popup x:Name="PART_Popup" AllowsTransparency="true"
                   Placement="Center" PopupAnimation="{StaticResource {x:Static SystemParameters.ToolTipPopupAnimationKey}}"
                   IsOpen="{Binding ElementName=toggle,Path=IsChecked, Mode=TwoWay}" StaysOpen="False">
                <Border x:Name="dropDownBorder" Padding="{TemplateBinding Padding}" Margin="2"
                      MinWidth="{Binding ActualWidth, ElementName=toggle}" MaxHeight="{StaticResource DateTimeSelectorPopupMaxHeight}" 
                      Background="{DynamicResource RegionBrush}"
                      BorderBrush="{StaticResource BorderBrush}" BorderThickness="1"
                      CornerRadius="{TemplateBinding CornerRadius}">
                  <Grid>
                    <!--<Grid.RowDefinitions>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>-->
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" x:Name="ThirdPickerHostColumn"/>
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="0" BorderThickness="0" >
                      <local:NumberSelector FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}"
                                            CornerRadius="4,0,0,4"
                                            TextColor="{StaticResource TextColor}" SelectedBackground="{StaticResource PrimaryColor}" SelectedTextColor="{StaticResource TextColor}"     
                                            MinValue="0" MaxValue="23" CurrentValue="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Hour,Mode=TwoWay}"/>
                    </Border>
                    <Border Grid.Column="1" BorderThickness="1,0" BorderBrush="{TemplateBinding BorderBrush}">
                      <local:NumberSelector FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}"
                                            CornerRadius="0"
                                            TextColor="{StaticResource TextColor}" SelectedBackground="{StaticResource PrimaryColor}" SelectedTextColor="{StaticResource TextColor}"     
                                            MinValue="0" MaxValue="59" CurrentValue="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Minute,Mode=TwoWay}"/>
                    </Border>
                    <Border Grid.Column="2" BorderThickness="0">
                      <local:NumberSelector FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}"
                                            CornerRadius="0,4,4,0"
                                            TextColor="{StaticResource TextColor}" SelectedBackground="{StaticResource PrimaryColor}" SelectedTextColor="{StaticResource TextColor}"     
                                            MinValue="0" MaxValue="59" CurrentValue="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Second,Mode=TwoWay}"/>
                    </Border>

                    <!--<Border Grid.Row="1" Grid.ColumnSpan="5" BorderThickness="0,1,0,0" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                      <UniformGrid Rows="1">
                        <Button Focusable="False" Background="Transparent"  local:ControlAttach.CornerRadius="0,0,0,3" Padding="5,10">
                          <Path Data="{StaticResource TickGeometry}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" Height="{TemplateBinding FontSize}"/>
                        </Button>
                        <Button Focusable="False" Background="Transparent" local:ControlAttach.CornerRadius="0,0,3,0" Padding="5,10">
                          <Path Data="{StaticResource CloseGeometry}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" Height="{TemplateBinding FontSize}"/>
                        </Button>
                      </UniformGrid>
                    </Border>-->
                  </Grid>
                </Border>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".56"/>
            </Trigger>
            <Trigger Property="ShowSecond" Value="False">
              <Setter Property="Visibility" Value="Collapsed" TargetName="SecondBlock" />
              <Setter Property="BorderThickness" Value="1,0,0,0" TargetName="InnerBorder" />
              <Setter Property="Width" Value="0" TargetName="ThirdPickerHostColumn"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:TimeSelector" BasedOn="{StaticResource TimeSelectorBaseStyle}"/>
</ResourceDictionary>