<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Leisn.Xaml.Wpf.Controls"
                    xmlns:internals="clr-namespace:Leisn.Xaml.Wpf.Internals">

  <Style x:Key="TextBoxBaseStyle" TargetType="TextBox" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="CaretBrush" Value="{DynamicResource TextBrush}"/>
    <Setter Property="SelectionBrush" Value="{DynamicResource PrimaryBrush}"/>
    <Setter Property="Background" Value="{DynamicResource RegionDark2Brush}"/>
    <Setter Property="Padding" Value="5,1"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="local:ControlAttach.ShowClear" Value="True"/>
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}"/>
    <Setter Property="local:ControlAttach.Placeholder" Value="{x:Null}"/>
    <Setter Property="local:ControlAttach.EnterMoveFocus" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Border x:Name="root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}">
            <Grid>
              <ScrollViewer x:Name="PART_ContentHost" Focusable="False" Padding="{TemplateBinding Padding}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
              <Button x:Name="clearButton" Style="{StaticResource ClearButtonStyle}"
                      HorizontalAlignment="Right" Visibility="Collapsed"
                      CommandParameter="{Binding .,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                      Command="{x:Static internals:InternalCommands.ClearTextCommand}"/>
              <TextBlock IsHitTestVisible="False" Visibility="Collapsed" x:Name="placeholder" Opacity=".56" Text="{TemplateBinding local:ControlAttach.Placeholder}" Margin="{TemplateBinding Padding}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionDark1Brush}" TargetName="root"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionDark2Brush}" TargetName="root"/>
              <Setter Property="Visibility" Value="Visible" TargetName="clearButton"/>
            </Trigger>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
              <Setter Property="Visibility" Value="Collapsed" TargetName="clearButton"/>
              <Setter Property="Visibility" Value="Visible" TargetName="placeholder"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Visibility" Value="Collapsed" TargetName="placeholder"/>
            </Trigger>
            <Trigger Property="local:ControlAttach.Placeholder" Value="{x:Null}">
              <Setter Property="Visibility" Value="Collapsed" TargetName="placeholder"/>
            </Trigger>
            <Trigger Property="local:ControlAttach.ShowClear" Value="False">
              <Setter Property="Visibility" Value="Hidden" TargetName="clearButton"/>
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionBrush}" TargetName="root"/>
              <Setter Property="Foreground" Value="{DynamicResource TextDarkBrush}" />
              <Setter Property="Visibility" Value="Collapsed" TargetName="clearButton"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="placeholder"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".56" TargetName="root"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="clearButton"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="placeholder"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxBaseStyle}"/>

  <Style x:Key="PasswordBoxBaseStyle" TargetType="{x:Type PasswordBox}">
    <Setter Property="PasswordChar" Value="●"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="AllowDrop" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
          <Condition Property="IsSelectionActive" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="PasswordBox" BasedOn="{StaticResource PasswordBoxBaseStyle}"/>

  <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"/>
    <Setter Property="TextDecorations" Value="Underline"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Foreground" Value="Red"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="true">
        <Setter Property="Cursor" Value="Hand"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
  <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
  <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
  <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="AllowDrop" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
          <Condition Property="IsSelectionActive" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="RichTextBoxBaseStyle" TargetType="{x:Type RichTextBox}">
    <Style.Resources>
      <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
      </Style>
      <Style x:Key="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="true">
            <Setter Property="Foreground" Value="Blue"/>
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
          </Trigger>
        </Style.Triggers>
      </Style>
    </Style.Resources>
    <Setter Property="MinWidth" Value="10"/>
    <Style.BasedOn>
      <StaticResource ResourceKey="{x:Type TextBoxBase}"/>
    </Style.BasedOn>
  </Style>
  <Style TargetType="RichTextBox" BasedOn="{StaticResource RichTextBoxBaseStyle}"/>
</ResourceDictionary>