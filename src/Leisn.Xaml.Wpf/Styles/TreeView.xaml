<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Leisn.Xaml.Wpf.Controls">
  <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonBaseSyle}">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Width" Value="20"/>
    <Setter Property="Height" Value="20"/>
    <Setter Property="MinHeight" Value="20"/>
    <Setter Property="Padding" Value="4"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="Transparent" Padding="{TemplateBinding Padding}">
            <Path x:Name="ExpandPath" Data="M 1,1.5 L 4.5,5 L 8,1.5"
                  Stroke="{TemplateBinding Foreground}" Stretch="Uniform"
                  StrokeThickness="1" RenderTransformOrigin=".5,.5">
              <Path.RenderTransform>
                <RotateTransform Angle="-90"/>
              </Path.RenderTransform>
            </Path>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".56"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="RenderTransform" TargetName="ExpandPath">
                <Setter.Value>
                  <RotateTransform Angle="0"/>
                </Setter.Value>
              </Setter>
              <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource TextDarkBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource TextLightBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TreeViewItemBaseStyle" TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}"/>
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Padding" Value="5,0"/>
    <Setter Property="Margin" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="20" Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <ToggleButton x:Name="Expander" ClickMode="Press"
                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                          Style="{StaticResource ExpandCollapseToggleStyle}"
                          MinHeight="{TemplateBinding MinHeight}"/>
            <Border x:Name="Bd" Grid.Column="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}"
                    Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
              <ContentPresenter x:Name="PART_Header" ContentSource="Header"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="false">
              <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
              <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource PrimaryBrush}"/>
              <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="true"/>
                <Condition Property="IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource PrimaryBrush}"/>
              <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
              <Setter Property="Opacity" Value=".8" TargetName="Bd"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" Value=".56" TargetName="Bd"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel/>
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemBaseStyle}"/>

  <Style x:Key="TreeViewBaseStyle" TargetType="{x:Type TreeView}" BasedOn="{StaticResource BaseControlStyle}">
    <Setter Property="Background" Value="{StaticResource RegionDark2Brush}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource SmallCornerRadius}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeView}">
          <Border x:Name="Bd" SnapsToDevicePixels="true">
            <ScrollViewer x:Name="scrollviewer"
                          Padding="{TemplateBinding Padding}" CanContentScroll="false"
                          Focusable="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                          Background="{TemplateBinding Background}"   
                          BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}"
                          local:ControlAttach.CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}">
              <ItemsPresenter/>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" Value=".56" TargetName="Bd"/>
            </Trigger>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
              <Setter Property="CanContentScroll" TargetName="scrollviewer" Value="true"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel/>
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="TreeView" BasedOn="{StaticResource TreeViewBaseStyle}"/>
</ResourceDictionary>