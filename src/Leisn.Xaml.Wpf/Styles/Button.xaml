<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Leisn.Xaml.Wpf.Controls">
  <Style x:Key="ButtonBaseStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource BaseInputStyle}">
    <Setter Property="Padding" Value="5,1"/>
    <Setter Property="local:ControlAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="bd" Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".5" TargetName="bd"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlLight1Brush}" TargetName="bd"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlDark1Brush}" TargetName="bd"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}"/>
  <Style TargetType="RepeatButton" BasedOn="{StaticResource ButtonBaseStyle}"/>
  
  <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style  x:Key="TextButtonStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource BaseControlStyle}">
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="bd" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                  Background="{TemplateBinding Background}">
            <ContentPresenter Margin="{TemplateBinding Padding}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".5" TargetName="bd"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource TextLightBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource  TextDarkBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ButtonPrimaryStyle" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="bd" Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{TemplateBinding local:ControlAttach.CornerRadius}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".5" TargetName="bd"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource PrimaryLightBrush}" TargetName="bd"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource PrimaryDarkBrush}" TargetName="bd"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ClearButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
    <Setter Property="Padding" Value="1"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="local:ControlAttach.ShowClear" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border Background="Transparent" Padding="3,0">
            <Border x:Name="bd" Width="18" Height="18" CornerRadius="10"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                  Padding="{TemplateBinding Padding}">
              <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
                <Grid.ColumnDefinitions>
                  <ColumnDefinition/>
                  <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Path x:Name="closePath" Height="10" Data="{StaticResource CloseGeometry}"  Fill="{TemplateBinding Foreground}" Stretch="Uniform"
                    SnapsToDevicePixels="True" Visibility="Collapsed"/>
                <Rectangle x:Name="deletePath" Height="2" Fill="{TemplateBinding Foreground}" Width="{TemplateBinding FontSize}"
                           Visibility="Collapsed" SnapsToDevicePixels="True"/>
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".5" TargetName="bd"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlLight1Brush}" TargetName="bd"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource RegionBrush}" TargetName="bd"/>
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Content" Value="{x:Null}"/>
                <Condition Property="local:ControlAttach.ShowClear" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter Property="Visibility" Value="Visible" TargetName="deletePath"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="closePath"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Content" Value="{x:Null}"/>
                <Condition Property="local:ControlAttach.ShowClear" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter Property="Visibility" Value="Visible" TargetName="closePath"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="deletePath"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="AddButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonPrimaryStyle}">
    <Setter Property="Padding" Value="1"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border Background="Transparent" Padding="3,0">
            <Border x:Name="bd" Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Width="18" Height="18" CornerRadius="10"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <Grid>
                <ContentPresenter Margin="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <Grid x:Name="addPath" Visibility="Collapsed">
                  <Rectangle x:Name="stick"  SnapsToDevicePixels="True"
                     Width="{TemplateBinding FontSize}" Fill="{TemplateBinding Foreground}" Height="2"/>
                  <Rectangle Height="{Binding ElementName=stick,Path=Width}" Width="{Binding ElementName=stick,Path=Height}"
                     Fill="{Binding ElementName=stick,Path=Fill}" SnapsToDevicePixels="True"/>
                </Grid>
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".5" TargetName="bd"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource PrimaryLightBrush}" TargetName="bd"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource PrimaryDarkBrush}" TargetName="bd"/>
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
              <Setter Property="Visibility" Value="Visible" TargetName="addPath"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>